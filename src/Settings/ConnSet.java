/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import jprinteradmin.Database;
import jprinteradmin.Utility;

/**
 *
 * @author stefan
 */
public class ConnSet extends javax.swing.JDialog {

    /**
     * Creates new form ConnSet
     */
    public static boolean createDatabaseVisible = false;

    public ConnSet(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(100, 100);

        dbType.setSelectedItem(Utility.iniDatabaseType);
        dbHost.setText(Utility.iniDatabaseHost);
        dbPort.setText(Utility.iniDatabasePort);
        dbName.setText(Utility.iniDatabaseName);
        dbUser.setText(Utility.iniDatabaseUser);
        dbPassword.setText(Utility.iniDatabasePassword);
    }

    public ConnSet() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        createDatabse = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        dbType = new javax.swing.JComboBox();
        dbHost = new javax.swing.JTextField();
        dbPort = new javax.swing.JTextField();
        dbName = new javax.swing.JTextField();
        dbUser = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        dbPassword = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldInstance = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language"); // NOI18N
        setTitle(bundle.getString("EDIT CONNECTION SETTINGS")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText(bundle.getString("TYPE")); // NOI18N

        jLabel2.setText(bundle.getString("HOST")); // NOI18N

        jLabel3.setText(bundle.getString("PORT")); // NOI18N

        jLabel4.setText(bundle.getString("DATABASE-NAME")); // NOI18N

        jLabel5.setText(bundle.getString("USER")); // NOI18N

        createDatabse.setText(bundle.getString("CREATE NEW DATABASE")); // NOI18N
        createDatabse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDatabseActionPerformed(evt);
            }
        });

        jLabel6.setText(bundle.getString("PASSWORD")); // NOI18N

        dbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "local", "mysql", "mssql" }));
        dbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dbTypeItemStateChanged(evt);
            }
        });

        dbHost.setToolTipText("");
        dbHost.setEnabled(false);

        dbPort.setEnabled(false);

        dbName.setText("jprinteradmin");
        dbName.setEnabled(false);

        dbUser.setEnabled(false);

        save.setText(bundle.getString("OK")); // NOI18N
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        dbPassword.setEnabled(false);

        jLabel7.setText(bundle.getString("INSTANCE")); // NOI18N

        jTextFieldInstance.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createDatabse)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(save)
                    .addComponent(dbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbHost)
                    .addComponent(dbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbName, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(dbUser)
                    .addComponent(dbPassword)
                    .addComponent(jTextFieldInstance))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(createDatabse)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dbHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dbPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldInstance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void dbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dbTypeItemStateChanged
        if (dbType.getSelectedItem() == "local") {
            dbHost.setEnabled(false);
            dbPort.setEnabled(false);
            dbName.setEnabled(false);
            dbUser.setEnabled(false);
            dbPassword.setEnabled(false);
            this.jTextFieldInstance.setEnabled(false);
        } else {
            dbHost.setEnabled(true);
            dbPort.setEnabled(true);
            dbName.setEnabled(true);
            dbUser.setEnabled(true);
            dbPassword.setEnabled(true);
        }
        if (dbType.getSelectedItem() == "mysql") {
            dbPort.setText("3306");
            this.jTextFieldInstance.setEnabled(false);
        }
        if (dbType.getSelectedItem() == "mssql") {
            dbPort.setText("1433");
            this.jTextFieldInstance.setEnabled(true);
        }
    }//GEN-LAST:event_dbTypeItemStateChanged

    private void createDatabseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDatabseActionPerformed
        CreateDatabase cd = new CreateDatabase(this, true);

    }//GEN-LAST:event_createDatabseActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (dbType.getSelectedItem() == "local") {
            Utility.iniDatabaseType = "local";
            Utility.writeIniValuesToFile();
            Database.setConn();
            Database.databaseState = Utility.checkDB();
            jprinteradmin.JPrinterAdmin.mw.checkdb();

            this.setVisible(false);
        }
        if (dbType.getSelectedItem() == "mysql") {
            Utility.iniDatabaseType = "mysql";
            Utility.iniDatabaseHost = this.dbHost.getText();
            Utility.iniDatabaseName = this.dbName.getText();
            Utility.iniDatabasePassword = this.dbPassword.getText();
            Utility.iniDatabasePort = this.dbPort.getText();
            Utility.iniDatabaseUser = this.dbUser.getText();
            Utility.writeIniValuesToFile();
            Database.setConn();
            Database.databaseState = Utility.checkDB();
            jprinteradmin.JPrinterAdmin.mw.checkdb();

            this.setVisible(false);
        }
        if (dbType.getSelectedItem() == "mssql") {
            Utility.iniDatabaseType = "mssql";
            Utility.iniDatabaseHost = this.dbHost.getText();
            Utility.iniDatabaseName = this.dbName.getText();
            Utility.iniDatabasePassword = this.dbPassword.getText();
            Utility.iniDatabasePort = this.dbPort.getText();
            Utility.iniDatabaseUser = this.dbUser.getText();
            Utility.iniDatabaseInstance = this.jTextFieldInstance.getText();
            Utility.writeIniValuesToFile();
            Database.setConn();
            Database.databaseState = Utility.checkDB();
            jprinteradmin.JPrinterAdmin.mw.checkdb();

            this.setVisible(false);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jprinteradmin.JPrinterAdmin.mw.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) { //NOI18N
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConnSet dialog = new ConnSet(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createDatabse;
    private javax.swing.JTextField dbHost;
    private javax.swing.JTextField dbName;
    private javax.swing.JPasswordField dbPassword;
    private javax.swing.JTextField dbPort;
    private javax.swing.JComboBox dbType;
    private javax.swing.JTextField dbUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextFieldInstance;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
