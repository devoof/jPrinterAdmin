/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import jprinteradmin.Database;
import jprinteradmin.Utility;

/**
 *
 * @author stefan
 */
public final class IpareaSettings extends javax.swing.JDialog {

    public IpareaSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getDBValues();
        this.setLocation(100, 100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        ipstart = new javax.swing.JTextField();
        ipend = new javax.swing.JTextField();
        customer = new javax.swing.JTextField();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonNew = new javax.swing.JButton();
        statusBar = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language"); // NOI18N
        setTitle(bundle.getString("NETWORK")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText(bundle.getString("ID")); // NOI18N

        jLabel2.setText(bundle.getString("IPSTART")); // NOI18N

        jLabel3.setText(bundle.getString("IPEND")); // NOI18N

        jLabel4.setText(bundle.getString("CUSTOMER")); // NOI18N

        id.setEnabled(false);

        jButtonDelete.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText(bundle.getString("UPDATE")); // NOI18N
        jButtonUpdate.setEnabled(false);
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonAdd.setText(bundle.getString("ADD")); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonNew.setText(bundle.getString("NEW")); // NOI18N
        jButtonNew.setEnabled(false);
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        statusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout statusBarLayout = new javax.swing.GroupLayout(statusBar);
        statusBar.setLayout(statusBarLayout);
        statusBarLayout.setHorizontalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statusBarLayout.setVerticalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAdd))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(customer, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addComponent(ipend)
                        .addComponent(ipstart)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ipstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ipend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(customer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonAdd))
                .addGap(31, 31, 31)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        Database.delLock("IP_AREAS", Integer.parseInt(id.getText())); //NOI18N
        id.setText(""); //NOI18N
        ipstart.setText(""); //NOI18N
        ipend.setText(""); //NOI18N
        customer.setText(""); //NOI18N

        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
        jButtonNew.setEnabled(false);
        jButtonAdd.setEnabled(true);
        statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("READY TO ADD DATASET"));
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String iprangecheck = checkIprange(ipstart.getText(), ipend.getText());
        if (iprangecheck.equals(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OK"))) {
            try {
                try (Statement st = Database.conn.createStatement()) {
                    String query = "INSERT INTO ip_areas (id, startip, endip, customer) VALUES (" + Database.getNextId("ip_areas") + ", '" + ipstart.getText() + "', '" + ipend.getText() + "', '" + Utility.escapeSqlString(customer.getText()) + "');"; //NOI18N
                    st.executeUpdate(query);
                }
            } catch (SQLException ex) {
                Logger.getLogger(IpareaSettings.class.getName()).log(Level.SEVERE, null, ex);
            }
            getDBValues();
            statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET ADDED."));
        } else {
            statusBarLabel.setText(iprangecheck);
        }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            try (Statement st = Database.conn.createStatement()) {
                String query = "DELETE FROM ip_areas WHERE id=" + id.getText(); //NOI18N //NOI18N //NOI18N
                st.executeUpdate(query);
                statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET DELTED."));
            }
        } catch (SQLException ex) {
            Logger.getLogger(IpareaSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

        getDBValues();

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        String iprangecheck = checkIprange(ipstart.getText(), ipend.getText());
        if (iprangecheck.equals(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OK"))) {
            try {
                try (Statement st = Database.conn.createStatement()) {
                    String query = "UPDATE IP_AREAS SET startip='" + ipstart.getText() + "', endip='" + ipend.getText() + "', customer='" + Utility.escapeSqlString(customer.getText()) + "' WHERE id=" + id.getText(); //NOI18N
                    st.executeUpdate(query);
                }
            } catch (SQLException ex) {
                Logger.getLogger(IpareaSettings.class.getName()).log(Level.SEVERE, null, ex);
            }
            getDBValues();
            statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET CHANGED"));
        } else {
            statusBarLabel.setText(iprangecheck);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.id.getText().length() > 0) {
            Database.delLock("IP_AREAS", Integer.parseInt(this.id.getText()));
        }
        jprinteradmin.JPrinterAdmin.mw.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private void jTable1ValueChanged() {
        System.out.println("mouse:" + this.jTable1.getSelectedRow());
        int selectedRow = this.jTable1.getSelectedRow();
        if (this.jTable1.getSelectedRows().length == 1) {
            changeValues(this.jTable1.getSelectedRow());
        } else {
            changeValues(-1);
        }
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jTable1ValueChanged();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        jTable1ValueChanged();
    }//GEN-LAST:event_jTable1KeyReleased

    public static String checkIprange(String startIP, String endIP) {
        String error = ""; //NOI18N
        if (!Utility.isValidIP(startIP)) {
            error += java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("STARTIP IS INVALID; ");
        }
        if (!Utility.isValidIP(endIP)) {
            error += java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ENDIP IS INVALID; ");
        }
        if (error.length() > 0) {
            return error;
        }
        if (Utility.ipToInt(startIP) > Utility.ipToInt(endIP)) {
            return java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("STARTIP GREATER THAN ENDIP");
        }
        return java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OK");
    }

    public void changeValues(int row) {
        if (row != -1) {
            try {
                Database.delLock("IP_AREAS", Integer.parseInt(this.id.getText())); //NOI18N
            } catch (Exception ex) {
            }
            Database.setLock("IP_AREAS", Integer.parseInt(this.jTable1.getValueAt(row, 0).toString())); //NOI18N
            this.id.setText(this.jTable1.getValueAt(row, 0).toString());
            this.ipstart.setText(this.jTable1.getValueAt(row, 1).toString());
            this.ipend.setText(this.jTable1.getValueAt(row, 2).toString());
            try {
                this.customer.setText(this.jTable1.getValueAt(row, 3).toString());
            } catch (Exception ex) {
            }
            this.jButtonDelete.setEnabled(true);
            this.jButtonUpdate.setEnabled(true);
            this.jButtonNew.setEnabled(true);
            this.jButtonAdd.setEnabled(false);
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("EDIT DATASET ") + this.jTable1.getValueAt(row, 0).toString());
        } else {
            try {
                Database.delLock("IP_AREAS", Integer.parseInt(this.id.getText())); //NOI18N
            } catch (Exception ex) {
            }

            this.id.setText("");
            this.ipstart.setText("");
            this.ipend.setText("");
            this.customer.setText("");
            this.jButtonDelete.setEnabled(false);
            this.jButtonUpdate.setEnabled(false);
            this.jButtonNew.setEnabled(false);
            this.jButtonAdd.setEnabled(true);


        }
    }

    public void getDBValues() {


        try {
            Statement st = Database.conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT id,startip,endip,customer FROM IP_AREAS"); //NOI18N
            ArrayList<String[]> list = new ArrayList<>();

            while (rs.next()) {
                //( (DefaultTableModel) dialog.jTable1.getModel() ).insertRow(icolumn+1, rs.getInt(1));
                list.add(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});


            }
            Object[][] obj = new Object[list.size()][4];
            for (int ii = 0; ii < list.size(); ii++) {
                obj[ii] = (String[]) list.get(ii);
            }
            this.jTable1.updateUI();
            //dialog.jTable1.removeAll();
            this.jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    obj,
                    new String[]{
                java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ID"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("IPSTART"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("IPEND"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("CUSTOMER")
            }) {
                Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (SQLException ex) {
            Logger.getLogger(IpareaSettings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customer;
    private javax.swing.JTextField id;
    private javax.swing.JTextField ipend;
    private javax.swing.JTextField ipstart;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel statusBar;
    private javax.swing.JLabel statusBarLabel;
    // End of variables declaration//GEN-END:variables
}
