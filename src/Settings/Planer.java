/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import jprinteradmin.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import jprinteradmin.Database.lock;

/**
 *
 * @author stefan
 */
public class Planer extends javax.swing.JDialog {

    public Planer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        //throw new UnsupportedOperationException("Not yet implemented");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) { //NOI18N
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrinterWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        initComponents();
        final Planer dialog = this;

        this.jComboBoxKind.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("WEEKLY"));
        this.jComboBoxKind.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("MONTHLY"));
        this.jComboBoxKind.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("YEARLY"));
        Planer.getDBValues(dialog);
        //Weekly, Monthly, Yearly
        this.setLocation(100, 100);
        this.setVisible(true);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusBar = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        label4 = new java.awt.Label();
        jComboBoxSchedule = new javax.swing.JComboBox();
        jTextFieldNewPlan = new javax.swing.JTextField();
        jButtonAddPlan = new javax.swing.JButton();
        jComboBoxJobs = new javax.swing.JComboBox();
        jButtonAddJob = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxThursday = new javax.swing.JCheckBox();
        jCheckBoxSunday = new javax.swing.JCheckBox();
        jCheckBoxSaturday = new javax.swing.JCheckBox();
        jCheckBoxMonday = new javax.swing.JCheckBox();
        jCheckBoxWednesday = new javax.swing.JCheckBox();
        jCheckBoxFriday = new javax.swing.JCheckBox();
        jCheckBoxTuesday = new javax.swing.JCheckBox();
        label1 = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxJanuary = new javax.swing.JCheckBox();
        jCheckBoxFebruary = new javax.swing.JCheckBox();
        jCheckBoxMarch = new javax.swing.JCheckBox();
        jCheckBoxApril = new javax.swing.JCheckBox();
        jCheckBoxMay = new javax.swing.JCheckBox();
        jCheckBoxJuly = new javax.swing.JCheckBox();
        jCheckBoxJune = new javax.swing.JCheckBox();
        jCheckBoxAugust = new javax.swing.JCheckBox();
        jCheckBoxSeptember = new javax.swing.JCheckBox();
        jCheckBoxOctober = new javax.swing.JCheckBox();
        jCheckBoxNovember = new javax.swing.JCheckBox();
        jCheckBoxDecember = new javax.swing.JCheckBox();
        label2 = new java.awt.Label();
        jPanel3 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        jCheckBoxDay1 = new javax.swing.JCheckBox();
        jCheckBoxDay2 = new javax.swing.JCheckBox();
        jCheckBoxDay7 = new javax.swing.JCheckBox();
        jCheckBoxDay6 = new javax.swing.JCheckBox();
        jCheckBoxDay3 = new javax.swing.JCheckBox();
        jCheckBoxDay5 = new javax.swing.JCheckBox();
        jCheckBoxDay4 = new javax.swing.JCheckBox();
        jCheckBoxDay9 = new javax.swing.JCheckBox();
        jCheckBoxDay8 = new javax.swing.JCheckBox();
        jCheckBoxDay10 = new javax.swing.JCheckBox();
        jCheckBoxDay11 = new javax.swing.JCheckBox();
        jCheckBoxDay12 = new javax.swing.JCheckBox();
        jCheckBoxDay13 = new javax.swing.JCheckBox();
        jCheckBoxDay14 = new javax.swing.JCheckBox();
        jCheckBoxDay15 = new javax.swing.JCheckBox();
        jCheckBoxDay16 = new javax.swing.JCheckBox();
        jCheckBoxDay17 = new javax.swing.JCheckBox();
        jCheckBoxDay18 = new javax.swing.JCheckBox();
        jCheckBoxDay19 = new javax.swing.JCheckBox();
        jCheckBoxDay20 = new javax.swing.JCheckBox();
        jCheckBoxDay21 = new javax.swing.JCheckBox();
        jCheckBoxDay22 = new javax.swing.JCheckBox();
        jCheckBoxDay23 = new javax.swing.JCheckBox();
        jCheckBoxDay24 = new javax.swing.JCheckBox();
        jCheckBoxDay26 = new javax.swing.JCheckBox();
        jCheckBoxDay25 = new javax.swing.JCheckBox();
        jCheckBoxDay27 = new javax.swing.JCheckBox();
        jComboBoxKind = new javax.swing.JComboBox();
        jCheckBoxDay28 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonChangeSchedule = new javax.swing.JButton();
        jButtonDeleteJob = new javax.swing.JButton();
        jButtonDeletePlan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language"); // NOI18N
        setTitle(bundle.getString("PLANER")); // NOI18N
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        statusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout statusBarLayout = new javax.swing.GroupLayout(statusBar);
        statusBar.setLayout(statusBarLayout);
        statusBarLayout.setHorizontalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statusBarLayout.setVerticalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label4.setText(bundle.getString("PLAN:")); // NOI18N

        jComboBoxSchedule.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxScheduleItemStateChanged(evt);
            }
        });

        jTextFieldNewPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNewPlanActionPerformed(evt);
            }
        });

        jButtonAddPlan.setText(bundle.getString("ADD")); // NOI18N
        jButtonAddPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPlanActionPerformed(evt);
            }
        });

        jButtonAddJob.setText(bundle.getString("ADD")); // NOI18N
        jButtonAddJob.setEnabled(false);
        jButtonAddJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddJobActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setEnabled(false);

        jCheckBoxThursday.setText(bundle.getString("THURSDAY")); // NOI18N
        jCheckBoxThursday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxThursdayActionPerformed(evt);
            }
        });

        jCheckBoxSunday.setText(bundle.getString("SUNDAY")); // NOI18N
        jCheckBoxSunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSundayActionPerformed(evt);
            }
        });

        jCheckBoxSaturday.setText(bundle.getString("SATURDAY")); // NOI18N

        jCheckBoxMonday.setText(bundle.getString("MONDAY")); // NOI18N

        jCheckBoxWednesday.setText(bundle.getString("WEDNESDAY")); // NOI18N
        jCheckBoxWednesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWednesdayActionPerformed(evt);
            }
        });

        jCheckBoxFriday.setText(bundle.getString("FRIDAY")); // NOI18N
        jCheckBoxFriday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFridayActionPerformed(evt);
            }
        });

        jCheckBoxTuesday.setText(bundle.getString("TUESDAY")); // NOI18N

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText(bundle.getString("WEEKDAYS")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxSunday)
                    .addComponent(jCheckBoxMonday)
                    .addComponent(jCheckBoxWednesday)
                    .addComponent(jCheckBoxThursday)
                    .addComponent(jCheckBoxSaturday)
                    .addComponent(jCheckBoxFriday)
                    .addComponent(jCheckBoxTuesday)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jCheckBoxMonday)
                .addGap(8, 8, 8)
                .addComponent(jCheckBoxTuesday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxWednesday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxThursday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFriday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSaturday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSunday)
                .addContainerGap())
        );

        jCheckBoxJanuary.setText(bundle.getString("JANUARY")); // NOI18N

        jCheckBoxFebruary.setText(bundle.getString("FEBRUARY")); // NOI18N
        jCheckBoxFebruary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFebruaryActionPerformed(evt);
            }
        });

        jCheckBoxMarch.setText(bundle.getString("MARCH")); // NOI18N

        jCheckBoxApril.setText(bundle.getString("APRIL")); // NOI18N

        jCheckBoxMay.setText(bundle.getString("MAY")); // NOI18N

        jCheckBoxJuly.setText(bundle.getString("JULY")); // NOI18N

        jCheckBoxJune.setText(bundle.getString("JUNE")); // NOI18N

        jCheckBoxAugust.setText(bundle.getString("AUGUST")); // NOI18N

        jCheckBoxSeptember.setText(bundle.getString("SEPTEMBER")); // NOI18N

        jCheckBoxOctober.setText(bundle.getString("OCTOBER")); // NOI18N

        jCheckBoxNovember.setText(bundle.getString("NOVEMBER")); // NOI18N
        jCheckBoxNovember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNovemberActionPerformed(evt);
            }
        });

        jCheckBoxDecember.setText(bundle.getString("DECEMBER")); // NOI18N

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText(bundle.getString("MONTHS")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxJuly)
                    .addComponent(jCheckBoxOctober)
                    .addComponent(jCheckBoxNovember)
                    .addComponent(jCheckBoxDecember)
                    .addComponent(jCheckBoxAugust)
                    .addComponent(jCheckBoxMay)
                    .addComponent(jCheckBoxJune)
                    .addComponent(jCheckBoxFebruary)
                    .addComponent(jCheckBoxJanuary)
                    .addComponent(jCheckBoxSeptember)
                    .addComponent(jCheckBoxMarch)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxApril))
                .addGap(105, 105, 105))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jCheckBoxJanuary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxFebruary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMarch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxApril)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxMay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxJune)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxJuly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxAugust)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxSeptember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxOctober)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxNovember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxDecember)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        label3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label3.setText(bundle.getString("DAYS-IN-MONTH")); // NOI18N

        jCheckBoxDay1.setText("1");

        jCheckBoxDay2.setText("2");

        jCheckBoxDay7.setText("7");

        jCheckBoxDay6.setText("6");

        jCheckBoxDay3.setText("3");

        jCheckBoxDay5.setText("5");

        jCheckBoxDay4.setText("4");

        jCheckBoxDay9.setText("9");

        jCheckBoxDay8.setText("8");

        jCheckBoxDay10.setText("10");

        jCheckBoxDay11.setText("11");

        jCheckBoxDay12.setText("12");

        jCheckBoxDay13.setText("13");

        jCheckBoxDay14.setText("14");

        jCheckBoxDay15.setText("15");

        jCheckBoxDay16.setText("16");

        jCheckBoxDay17.setText("17");

        jCheckBoxDay18.setText("18");

        jCheckBoxDay19.setText("19");

        jCheckBoxDay20.setText("20");

        jCheckBoxDay21.setText("21");

        jCheckBoxDay22.setText("22");

        jCheckBoxDay23.setText("23");

        jCheckBoxDay24.setText("24");

        jCheckBoxDay26.setText("26");

        jCheckBoxDay25.setText("25");

        jCheckBoxDay27.setText("27");

        jComboBoxKind.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxKindItemStateChanged(evt);
            }
        });
        jComboBoxKind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKindActionPerformed(evt);
            }
        });

        jCheckBoxDay28.setText("28");

        jLabel1.setText(bundle.getString("KIND:")); // NOI18N

        jButtonChangeSchedule.setText(bundle.getString("CHANGE-SCHEDULE")); // NOI18N
        jButtonChangeSchedule.setEnabled(false);
        jButtonChangeSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeScheduleActionPerformed(evt);
            }
        });

        jButtonDeleteJob.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDeleteJob.setEnabled(false);
        jButtonDeleteJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteJobActionPerformed(evt);
            }
        });

        jButtonDeletePlan.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDeletePlan.setEnabled(false);
        jButtonDeletePlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePlanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxKind, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDeletePlan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNewPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAddPlan)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonChangeSchedule))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jCheckBoxDay7)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxDay2)
                                            .addComponent(jCheckBoxDay1)
                                            .addComponent(jCheckBoxDay3)
                                            .addComponent(jCheckBoxDay4)
                                            .addComponent(jCheckBoxDay5)
                                            .addComponent(jCheckBoxDay6)
                                            .addComponent(jCheckBoxDay11)
                                            .addComponent(jCheckBoxDay10)
                                            .addComponent(jCheckBoxDay9)
                                            .addComponent(jCheckBoxDay8)
                                            .addComponent(jCheckBoxDay12))
                                        .addGap(10, 10, 10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBoxDay14)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jCheckBoxDay19)
                                            .addGap(8, 8, 8))
                                        .addComponent(jCheckBoxDay13))
                                    .addComponent(jCheckBoxDay15)
                                    .addComponent(jCheckBoxDay16)
                                    .addComponent(jCheckBoxDay17)
                                    .addComponent(jCheckBoxDay18)
                                    .addComponent(jCheckBoxDay23)
                                    .addComponent(jCheckBoxDay22)
                                    .addComponent(jCheckBoxDay21)
                                    .addComponent(jCheckBoxDay20)
                                    .addComponent(jCheckBoxDay24))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxDay26)
                                    .addComponent(jCheckBoxDay25)
                                    .addComponent(jCheckBoxDay28)
                                    .addComponent(jCheckBoxDay27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxJobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAddJob))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDeleteJob))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBoxSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldNewPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonAddPlan)
                                .addComponent(jButtonDeletePlan)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBoxKind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonChangeSchedule))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jCheckBoxDay1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay3)
                                            .addGap(3, 3, 3)
                                            .addComponent(jCheckBoxDay4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay6)
                                            .addGap(7, 7, 7)
                                            .addComponent(jCheckBoxDay7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay12))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jCheckBoxDay25)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jCheckBoxDay26)
                                                    .addGap(3, 3, 3)
                                                    .addComponent(jCheckBoxDay27)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jCheckBoxDay28))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jCheckBoxDay13)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jCheckBoxDay14)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jCheckBoxDay15)
                                                    .addGap(3, 3, 3)
                                                    .addComponent(jCheckBoxDay16)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay17)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay18)
                                            .addGap(7, 7, 7)
                                            .addComponent(jCheckBoxDay19)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay20)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay21)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay22)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay23)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jCheckBoxDay24)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxJobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddJob))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteJob)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (oldLock != null && oldLock.isLocked) {
            Database.delLock(oldLock.table, oldLock.id);
            oldLock = null;
        }
        jprinteradmin.JPrinterAdmin.mw.setEnabled(true);
        System.out.println("closing");

    }//GEN-LAST:event_formWindowClosing

    private void jCheckBoxThursdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxThursdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxThursdayActionPerformed

    private void jCheckBoxFridayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFridayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxFridayActionPerformed

    private void jCheckBoxSundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSundayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSundayActionPerformed

    private void jCheckBoxWednesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWednesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxWednesdayActionPerformed

    private void jCheckBoxFebruaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFebruaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxFebruaryActionPerformed

    private void jCheckBoxNovemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNovemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxNovemberActionPerformed

    private void jComboBoxKindItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxKindItemStateChanged
    }//GEN-LAST:event_jComboBoxKindItemStateChanged

    private void jComboBoxKindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKindActionPerformed
        System.out.println("---" + jComboBoxKind.getSelectedItem());
        if (jComboBoxKind.getSelectedIndex() == 0) {
            changeWeekdays(true);
            changeDayOfMonth(false);
            changeMonth(false);
        } else if (jComboBoxKind.getSelectedIndex() == 1) {
            changeWeekdays(false);
            changeDayOfMonth(true);
            changeMonth(false);
        } else if (jComboBoxKind.getSelectedIndex() == 2) {
            changeWeekdays(false);
            changeDayOfMonth(true);
            changeMonth(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxKindActionPerformed

    private void jTextFieldNewPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNewPlanActionPerformed
    }//GEN-LAST:event_jTextFieldNewPlanActionPerformed

    private void jButtonAddPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPlanActionPerformed
        System.out.println("newPlan");
        try {
            Statement st = Database.conn.createStatement();
            st.executeUpdate("INSERT INTO SCHEDULE (id, " + Utility.dbQuotes + "type" + Utility.dbQuotes + ", values1, values2, " + Utility.dbQuotes + "name" + Utility.dbQuotes + ") "
                    + " VALUES ('" + Database.getNextId("SCHEDULE") + "', 0, '', NULL, '" + Utility.escapeSqlString(this.jTextFieldNewPlan.getText()) + "')");
            getDBValues(this);
            this.jComboBoxSchedule.setSelectedItem(this.jTextFieldNewPlan.getText());
            this.jTextFieldNewPlan.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAddPlanActionPerformed
    lock oldLock = null;

    private void jComboBoxScheduleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxScheduleItemStateChanged
        if (evt.getStateChange() == 1) {
            System.out.println("Item changed:" + evt.getStateChange());
            try {
                int id = scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex());
                this.cleanDateFields();
                Statement st = Database.conn.createStatement();
                String query = "SELECT " + Utility.dbQuotes + "type" + Utility.dbQuotes + ", values1, values2, " + Utility.dbQuotes + "name" + Utility.dbQuotes + " FROM SCHEDULE WHERE id = " + id;
                if (oldLock != null && oldLock.isLocked) {
                    Database.delLock(oldLock.table, oldLock.id);
                    oldLock = null;
                }
                lock islock = Database.getLock("SCHEDULE", id);
                if (islock.isLocked) {
                    this.jButtonAddJob.setEnabled(false);
                    this.jButtonChangeSchedule.setEnabled(false);
                    this.jButtonDeleteJob.setEnabled(false);
                    this.jButtonDeletePlan.setEnabled(false);
                    statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET IS LOCKED. USER:") + islock.user + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString(". DATE: ") + islock.datetime + ".");
                } else {
                    Database.setLock("SCHEDULE", id);
                    oldLock = Database.getLock("SCHEDULE", id);
                    this.jButtonAddJob.setEnabled(true);
                    this.jButtonChangeSchedule.setEnabled(true);
                    this.jButtonDeletePlan.setEnabled(true);

                    statusBarLabel.setText("");
                }
                ResultSet rs = st.executeQuery(query);
                while (rs.next()) {
                    int type = rs.getInt(1);
                    this.jComboBoxKind.setSelectedIndex(type);
                    String[] value1 = rs.getString(2).split(",");
                    String[] value2 = null;
                    if (rs.getString(3) == null) {
                    } else {
                        value2 = rs.getString(3).split(",");
                    }
                    switch (type) {
                        case 0:
                            for (int i = 0; i < value1.length; i++) {
                                switch (value1[i]) {
                                    case "1":
                                        this.jCheckBoxSunday.setSelected(true);
                                        break;
                                    case "2":
                                        this.jCheckBoxMonday.setSelected(true);
                                        break;
                                    case "3":
                                        this.jCheckBoxTuesday.setSelected(true);
                                        break;
                                    case "4":
                                        this.jCheckBoxWednesday.setSelected(true);
                                        break;
                                    case "5":
                                        this.jCheckBoxThursday.setSelected(true);
                                        break;
                                    case "6":
                                        this.jCheckBoxFriday.setSelected(true);
                                        break;
                                    case "7":
                                        this.jCheckBoxSaturday.setSelected(true);
                                        break;

                                }
                            }
                            break;
                        case 1:
                            for (int i = 0; i < value1.length; i++) {
                                switch (value1[i]) {
                                    case "1":
                                        this.jCheckBoxDay1.setSelected(true);
                                        break;
                                    case "2":
                                        this.jCheckBoxDay2.setSelected(true);
                                        break;
                                    case "3":
                                        this.jCheckBoxDay3.setSelected(true);
                                        break;
                                    case "4":
                                        this.jCheckBoxDay4.setSelected(true);
                                        break;
                                    case "5":
                                        this.jCheckBoxDay5.setSelected(true);
                                        break;
                                    case "6":
                                        this.jCheckBoxDay6.setSelected(true);
                                        break;
                                    case "7":
                                        this.jCheckBoxDay7.setSelected(true);
                                        break;
                                    case "8":
                                        this.jCheckBoxDay8.setSelected(true);
                                        break;
                                    case "9":
                                        this.jCheckBoxDay9.setSelected(true);
                                        break;
                                    case "10":
                                        this.jCheckBoxDay10.setSelected(true);
                                        break;
                                    case "11":
                                        this.jCheckBoxDay11.setSelected(true);
                                        break;
                                    case "12":
                                        this.jCheckBoxDay12.setSelected(true);
                                        break;
                                    case "13":
                                        this.jCheckBoxDay13.setSelected(true);
                                        break;
                                    case "14":
                                        this.jCheckBoxDay14.setSelected(true);
                                        break;
                                    case "15":
                                        this.jCheckBoxDay15.setSelected(true);
                                        break;
                                    case "16":
                                        this.jCheckBoxDay16.setSelected(true);
                                        break;
                                    case "17":
                                        this.jCheckBoxDay17.setSelected(true);
                                        break;
                                    case "18":
                                        this.jCheckBoxDay18.setSelected(true);
                                        break;
                                    case "19":
                                        this.jCheckBoxDay19.setSelected(true);
                                        break;
                                    case "20":
                                        this.jCheckBoxDay20.setSelected(true);
                                        break;
                                    case "21":
                                        this.jCheckBoxDay21.setSelected(true);
                                        break;
                                    case "22":
                                        this.jCheckBoxDay22.setSelected(true);
                                        break;
                                    case "23":
                                        this.jCheckBoxDay23.setSelected(true);
                                        break;
                                    case "24":
                                        this.jCheckBoxDay24.setSelected(true);
                                        break;
                                    case "25":
                                        this.jCheckBoxDay25.setSelected(true);
                                        break;
                                    case "26":
                                        this.jCheckBoxDay26.setSelected(true);
                                        break;
                                    case "27":
                                        this.jCheckBoxDay27.setSelected(true);
                                        break;

                                }
                            }
                            break;
                        case 2:
                            for (int i = 0; i < value2.length; i++) {
                                switch (value1[i]) {
                                    case "1":
                                        this.jCheckBoxDay1.setSelected(true);
                                        break;
                                    case "2":
                                        this.jCheckBoxDay2.setSelected(true);
                                        break;
                                    case "3":
                                        this.jCheckBoxDay3.setSelected(true);
                                        break;
                                    case "4":
                                        this.jCheckBoxDay4.setSelected(true);
                                        break;
                                    case "5":
                                        this.jCheckBoxDay5.setSelected(true);
                                        break;
                                    case "6":
                                        this.jCheckBoxDay6.setSelected(true);
                                        break;
                                    case "7":
                                        this.jCheckBoxDay7.setSelected(true);
                                        break;
                                    case "8":
                                        this.jCheckBoxDay8.setSelected(true);
                                        break;
                                    case "9":
                                        this.jCheckBoxDay9.setSelected(true);
                                        break;
                                    case "10":
                                        this.jCheckBoxDay10.setSelected(true);
                                        break;
                                    case "11":
                                        this.jCheckBoxDay11.setSelected(true);
                                        break;
                                    case "12":
                                        this.jCheckBoxDay12.setSelected(true);
                                        break;
                                    case "13":
                                        this.jCheckBoxDay13.setSelected(true);
                                        break;
                                    case "14":
                                        this.jCheckBoxDay14.setSelected(true);
                                        break;
                                    case "15":
                                        this.jCheckBoxDay15.setSelected(true);
                                        break;
                                    case "16":
                                        this.jCheckBoxDay16.setSelected(true);
                                        break;
                                    case "17":
                                        this.jCheckBoxDay17.setSelected(true);
                                        break;
                                    case "18":
                                        this.jCheckBoxDay18.setSelected(true);
                                        break;
                                    case "19":
                                        this.jCheckBoxDay19.setSelected(true);
                                        break;
                                    case "20":
                                        this.jCheckBoxDay20.setSelected(true);
                                        break;
                                    case "21":
                                        this.jCheckBoxDay21.setSelected(true);
                                        break;
                                    case "22":
                                        this.jCheckBoxDay22.setSelected(true);
                                        break;
                                    case "23":
                                        this.jCheckBoxDay23.setSelected(true);
                                        break;
                                    case "24":
                                        this.jCheckBoxDay24.setSelected(true);
                                        break;
                                    case "25":
                                        this.jCheckBoxDay25.setSelected(true);
                                        break;
                                    case "26":
                                        this.jCheckBoxDay26.setSelected(true);
                                        break;
                                    case "27":
                                        this.jCheckBoxDay27.setSelected(true);
                                        break;
                                }
                            }
                            for (int i = 0; i < value1.length; i++) {
                                switch (value1[i]) {
                                    case "1":
                                        this.jCheckBoxJanuary.setSelected(true);
                                        break;
                                    case "2":
                                        this.jCheckBoxFebruary.setSelected(true);
                                        break;
                                    case "3":
                                        this.jCheckBoxMarch.setSelected(true);
                                        break;
                                    case "4":
                                        this.jCheckBoxApril.setSelected(true);
                                        break;
                                    case "5":
                                        this.jCheckBoxMay.setSelected(true);
                                        break;
                                    case "6":
                                        this.jCheckBoxJune.setSelected(true);
                                        break;
                                    case "7":
                                        this.jCheckBoxJuly.setSelected(true);
                                        break;
                                    case "8":
                                        this.jCheckBoxAugust.setSelected(true);
                                        break;
                                    case "9":
                                        this.jCheckBoxSeptember.setSelected(true);
                                        break;
                                    case "10":
                                        this.jCheckBoxOctober.setSelected(true);
                                        break;
                                    case "11":
                                        this.jCheckBoxNovember.setSelected(true);
                                        break;
                                    case "12":
                                        this.jCheckBoxDecember.setSelected(true);
                                        break;


                                }
                            }

                            break;
                    }
                }
                getJobs(id);
            } catch (SQLException ex) {
                Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBoxScheduleItemStateChanged

    private void getJobs(int id) {
        try {
            Statement st = Database.conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT " + Utility.dbQuotes + "order" + Utility.dbQuotes + "," + Utility.dbQuotes + "name" + Utility.dbQuotes + " FROM SCHEDULE_JOBS LEFT JOIN JOBS ON JOBS.id=SCHEDULE_JOBS.job_id WHERE schedule_id=" + id + " ORDER BY " + Utility.dbQuotes + "order" + Utility.dbQuotes);
            ArrayList<String[]> list = new ArrayList<>();
            while (rs.next()) {
                list.add(new String[]{rs.getString(1), rs.getString(2)});
            }
            Object[][] obj = new Object[list.size()][8];
            for (int ii = 0; ii < list.size(); ii++) {
                obj[ii] = (String[]) list.get(ii);
            }
            this.jTable1.updateUI();
            this.jTable1.removeAll();
            this.jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    obj,
                    new String[]{
                java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ORDER"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("JOB")
            }) {
                Class[] types = new Class[]{
                    java.lang.Integer.class,
                    java.lang.String.class,};
                boolean[] canEdit = new boolean[]{
                    false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } catch (SQLException ex) {
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void jButtonDeletePlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePlanActionPerformed
        int id = Planer.scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex());
        try {
            Statement st = Database.conn.createStatement();
            int countSchedule = st.executeUpdate("DELETE FROM SCHEDULE WHERE id =" + id);
            int countScheduleJobs = st.executeUpdate("DELETE FROM SCHEDULE_JOBS WHERE schedule_id =" + id);
            this.statusBarLabel.setText(countSchedule + " schedules and " + countScheduleJobs + " scheduled jobs deleted");
            if (oldLock != null && oldLock.isLocked) {
                Database.delLock(oldLock.table, oldLock.id);
                oldLock = null;
            }
            Planer.getDBValues(this);
        } catch (SQLException ex) {
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AN ERROR OCCURRED") + ":" + ex.getLocalizedMessage());
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_jButtonDeletePlanActionPerformed

    private void jButtonChangeScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeScheduleActionPerformed
        ArrayList<Integer> values1 = new ArrayList<>();
        ArrayList<Integer> values2 = new ArrayList<>();
        switch (this.jComboBoxKind.getSelectedIndex()) {
            case 0:
                if (this.jCheckBoxSunday.isSelected()) {
                    values1.add(1);
                }
                if (this.jCheckBoxMonday.isSelected()) {
                    values1.add(2);
                }
                if (this.jCheckBoxTuesday.isSelected()) {
                    values1.add(3);
                }
                if (this.jCheckBoxWednesday.isSelected()) {
                    values1.add(4);
                }
                if (this.jCheckBoxThursday.isSelected()) {
                    values1.add(5);
                }
                if (this.jCheckBoxFriday.isSelected()) {
                    values1.add(6);
                }
                if (this.jCheckBoxSaturday.isSelected()) {
                    values1.add(7);
                }

                break;
            case 1:
                if (this.jCheckBoxDay1.isSelected()) {
                    values1.add(1);
                }
                if (this.jCheckBoxDay2.isSelected()) {
                    values1.add(2);
                }
                if (this.jCheckBoxDay3.isSelected()) {
                    values1.add(3);
                }
                if (this.jCheckBoxDay4.isSelected()) {
                    values1.add(4);
                }
                if (this.jCheckBoxDay5.isSelected()) {
                    values1.add(5);
                }
                if (this.jCheckBoxDay6.isSelected()) {
                    values1.add(6);
                }
                if (this.jCheckBoxDay7.isSelected()) {
                    values1.add(7);
                }
                if (this.jCheckBoxDay8.isSelected()) {
                    values1.add(8);
                }
                if (this.jCheckBoxDay9.isSelected()) {
                    values1.add(9);
                }
                if (this.jCheckBoxDay10.isSelected()) {
                    values1.add(10);
                }
                if (this.jCheckBoxDay11.isSelected()) {
                    values1.add(11);
                }
                if (this.jCheckBoxDay12.isSelected()) {
                    values1.add(12);
                }
                if (this.jCheckBoxDay13.isSelected()) {
                    values1.add(13);
                }
                if (this.jCheckBoxDay14.isSelected()) {
                    values1.add(14);
                }
                if (this.jCheckBoxDay15.isSelected()) {
                    values1.add(15);
                }
                if (this.jCheckBoxDay16.isSelected()) {
                    values1.add(16);
                }
                if (this.jCheckBoxDay17.isSelected()) {
                    values1.add(17);
                }
                if (this.jCheckBoxDay18.isSelected()) {
                    values1.add(18);
                }
                if (this.jCheckBoxDay19.isSelected()) {
                    values1.add(19);
                }
                if (this.jCheckBoxDay20.isSelected()) {
                    values1.add(20);
                }
                if (this.jCheckBoxDay21.isSelected()) {
                    values1.add(21);
                }
                if (this.jCheckBoxDay22.isSelected()) {
                    values1.add(22);
                }
                if (this.jCheckBoxDay23.isSelected()) {
                    values1.add(23);
                }
                if (this.jCheckBoxDay24.isSelected()) {
                    values1.add(24);
                }
                if (this.jCheckBoxDay25.isSelected()) {
                    values1.add(25);
                }
                if (this.jCheckBoxDay26.isSelected()) {
                    values1.add(26);
                }
                if (this.jCheckBoxDay27.isSelected()) {
                    values1.add(27);
                }

                break;
            case 2:
                if (this.jCheckBoxDay1.isSelected()) {
                    values2.add(1);
                }
                if (this.jCheckBoxDay2.isSelected()) {
                    values2.add(2);
                }
                if (this.jCheckBoxDay3.isSelected()) {
                    values2.add(3);
                }
                if (this.jCheckBoxDay4.isSelected()) {
                    values2.add(4);
                }
                if (this.jCheckBoxDay5.isSelected()) {
                    values2.add(5);
                }
                if (this.jCheckBoxDay6.isSelected()) {
                    values2.add(6);
                }
                if (this.jCheckBoxDay7.isSelected()) {
                    values2.add(7);
                }
                if (this.jCheckBoxDay8.isSelected()) {
                    values2.add(8);
                }
                if (this.jCheckBoxDay9.isSelected()) {
                    values2.add(9);
                }
                if (this.jCheckBoxDay10.isSelected()) {
                    values2.add(10);
                }
                if (this.jCheckBoxDay11.isSelected()) {
                    values2.add(11);
                }
                if (this.jCheckBoxDay12.isSelected()) {
                    values2.add(12);
                }
                if (this.jCheckBoxDay13.isSelected()) {
                    values2.add(13);
                }
                if (this.jCheckBoxDay14.isSelected()) {
                    values2.add(14);
                }
                if (this.jCheckBoxDay15.isSelected()) {
                    values2.add(15);
                }
                if (this.jCheckBoxDay16.isSelected()) {
                    values2.add(16);
                }
                if (this.jCheckBoxDay17.isSelected()) {
                    values2.add(17);
                }
                if (this.jCheckBoxDay18.isSelected()) {
                    values2.add(18);
                }
                if (this.jCheckBoxDay19.isSelected()) {
                    values2.add(19);
                }
                if (this.jCheckBoxDay20.isSelected()) {
                    values2.add(20);
                }
                if (this.jCheckBoxDay21.isSelected()) {
                    values2.add(21);
                }
                if (this.jCheckBoxDay22.isSelected()) {
                    values2.add(22);
                }
                if (this.jCheckBoxDay23.isSelected()) {
                    values2.add(23);
                }
                if (this.jCheckBoxDay24.isSelected()) {
                    values2.add(24);
                }
                if (this.jCheckBoxDay25.isSelected()) {
                    values2.add(25);
                }
                if (this.jCheckBoxDay26.isSelected()) {
                    values2.add(26);
                }
                if (this.jCheckBoxDay27.isSelected()) {
                    values2.add(27);
                }
                if (this.jCheckBoxJanuary.isSelected()) {
                    values1.add(1);
                }
                if (this.jCheckBoxFebruary.isSelected()) {
                    values1.add(2);
                }
                if (this.jCheckBoxMarch.isSelected()) {
                    values1.add(3);
                }
                if (this.jCheckBoxApril.isSelected()) {
                    values1.add(4);
                }
                if (this.jCheckBoxMay.isSelected()) {
                    values1.add(5);
                }
                if (this.jCheckBoxJune.isSelected()) {
                    values1.add(6);
                }
                if (this.jCheckBoxJuly.isSelected()) {
                    values1.add(7);
                }
                if (this.jCheckBoxAugust.isSelected()) {
                    values1.add(8);
                }
                if (this.jCheckBoxSeptember.isSelected()) {
                    values1.add(9);
                }
                if (this.jCheckBoxOctober.isSelected()) {
                    values1.add(10);
                }
                if (this.jCheckBoxNovember.isSelected()) {
                    values1.add(11);
                }
                if (this.jCheckBoxDecember.isSelected()) {
                    values1.add(12);
                }

                break;
        }
        String updateQuery = "UPDATE SCHEDULE SET " + Utility.dbQuotes + "type" + Utility.dbQuotes + " = '" + this.jComboBoxKind.getSelectedIndex() + "', " + Utility.dbQuotes + "values1" + Utility.dbQuotes + " = '" + Utility.escapeSqlString(Utility.implode(values1, ",")) + "', " + Utility.dbQuotes + "values2" + Utility.dbQuotes + " = '" + Utility.escapeSqlString(Utility.implode(values2, ",")) + "' WHERE id = " + Planer.scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex());
        try {
            Statement st = Database.conn.createStatement();
            st.executeUpdate(updateQuery);
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("SCHEDULE-UPDATED"));
        } catch (SQLException ex) {
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AN ERROR OCCURRED") + ":" + ex.getLocalizedMessage());
            Planer.getDBValues(this);
        }

    }//GEN-LAST:event_jButtonChangeScheduleActionPerformed

    private void jButtonAddJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddJobActionPerformed
        try {
            Statement st = Database.conn.createStatement();
            int nextId = -1;
            ResultSet rsNextId = st.executeQuery("SELECT MAX(" + Utility.dbQuotes + "order" + Utility.dbQuotes + ")+1 FROM SCHEDULE_JOBS WHERE schedule_id = " + scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex()));
            while (rsNextId.next()) {
                nextId = rsNextId.getInt(1);
            }
            st.execute("INSERT INTO SCHEDULE_JOBS (schedule_id, job_id, " + Utility.dbQuotes + "order" + Utility.dbQuotes + ") VALUES(" + scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex()) + "," + jobIds.get(this.jComboBoxJobs.getSelectedIndex()) + "," + nextId + ")");
        } catch (SQLException ex) {
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.getJobs(scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex()));

    }//GEN-LAST:event_jButtonAddJobActionPerformed

    private void jButtonDeleteJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteJobActionPerformed
        try {
            Statement st = Database.conn.createStatement();
            String order = String.valueOf(this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 0));
            st.execute("DELETE FROM SCHEDULE_JOBS WHERE schedule_id=" + scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex()) + " AND " + Utility.dbQuotes + "order" + Utility.dbQuotes + " = " + order);
        } catch (SQLException ex) {
            Logger.getLogger(Planer.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jButtonDeleteJob.setEnabled(false);
        this.getJobs(scheduleIds.get(this.jComboBoxSchedule.getSelectedIndex()));
    }//GEN-LAST:event_jButtonDeleteJobActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        System.out.println("mouse:" + this.jTable1.getSelectedRow());
        int selectedRow = this.jTable1.getSelectedRow();
        if (selectedRow > -1) {
            if (this.jButtonChangeSchedule.isEnabled()) {
                this.jButtonDeleteJob.setEnabled(true);
            } else {
                this.jButtonDeleteJob.setEnabled(false);
            }
        } else {
            this.jButtonDeleteJob.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void changeWeekdays(Boolean newState) {
        this.jCheckBoxMonday.setEnabled(newState);
        this.jCheckBoxTuesday.setEnabled(newState);
        this.jCheckBoxWednesday.setEnabled(newState);
        this.jCheckBoxThursday.setEnabled(newState);
        this.jCheckBoxFriday.setEnabled(newState);
        this.jCheckBoxSaturday.setEnabled(newState);
        this.jCheckBoxSunday.setEnabled(newState);
    }

    private void changeDayOfMonth(Boolean newState) {
        this.jCheckBoxDay1.setEnabled(newState);
        this.jCheckBoxDay2.setEnabled(newState);
        this.jCheckBoxDay3.setEnabled(newState);
        this.jCheckBoxDay4.setEnabled(newState);
        this.jCheckBoxDay5.setEnabled(newState);
        this.jCheckBoxDay6.setEnabled(newState);
        this.jCheckBoxDay7.setEnabled(newState);
        this.jCheckBoxDay8.setEnabled(newState);
        this.jCheckBoxDay9.setEnabled(newState);
        this.jCheckBoxDay10.setEnabled(newState);
        this.jCheckBoxDay11.setEnabled(newState);
        this.jCheckBoxDay12.setEnabled(newState);
        this.jCheckBoxDay13.setEnabled(newState);
        this.jCheckBoxDay14.setEnabled(newState);
        this.jCheckBoxDay15.setEnabled(newState);
        this.jCheckBoxDay16.setEnabled(newState);
        this.jCheckBoxDay17.setEnabled(newState);
        this.jCheckBoxDay18.setEnabled(newState);
        this.jCheckBoxDay19.setEnabled(newState);
        this.jCheckBoxDay20.setEnabled(newState);
        this.jCheckBoxDay21.setEnabled(newState);
        this.jCheckBoxDay22.setEnabled(newState);
        this.jCheckBoxDay23.setEnabled(newState);
        this.jCheckBoxDay24.setEnabled(newState);
        this.jCheckBoxDay25.setEnabled(newState);
        this.jCheckBoxDay26.setEnabled(newState);
        this.jCheckBoxDay27.setEnabled(newState);
        this.jCheckBoxDay28.setEnabled(newState);
    }

    private void changeMonth(Boolean newState) {
        this.jCheckBoxJanuary.setEnabled(newState);
        this.jCheckBoxFebruary.setEnabled(newState);
        this.jCheckBoxMarch.setEnabled(newState);
        this.jCheckBoxApril.setEnabled(newState);
        this.jCheckBoxMay.setEnabled(newState);
        this.jCheckBoxJune.setEnabled(newState);
        this.jCheckBoxJuly.setEnabled(newState);
        this.jCheckBoxAugust.setEnabled(newState);
        this.jCheckBoxSeptember.setEnabled(newState);
        this.jCheckBoxOctober.setEnabled(newState);
        this.jCheckBoxNovember.setEnabled(newState);
        this.jCheckBoxDecember.setEnabled(newState);


    }

    private void cleanDateFields() {
        this.jCheckBoxMonday.setSelected(false);
        this.jCheckBoxTuesday.setSelected(false);
        this.jCheckBoxWednesday.setSelected(false);
        this.jCheckBoxThursday.setSelected(false);
        this.jCheckBoxFriday.setSelected(false);
        this.jCheckBoxSaturday.setSelected(false);
        this.jCheckBoxSunday.setSelected(false);

        this.jCheckBoxDay1.setSelected(false);
        this.jCheckBoxDay2.setSelected(false);
        this.jCheckBoxDay3.setSelected(false);
        this.jCheckBoxDay4.setSelected(false);
        this.jCheckBoxDay5.setSelected(false);
        this.jCheckBoxDay6.setSelected(false);
        this.jCheckBoxDay7.setSelected(false);
        this.jCheckBoxDay8.setSelected(false);
        this.jCheckBoxDay9.setSelected(false);
        this.jCheckBoxDay10.setSelected(false);
        this.jCheckBoxDay11.setSelected(false);
        this.jCheckBoxDay12.setSelected(false);
        this.jCheckBoxDay13.setSelected(false);
        this.jCheckBoxDay14.setSelected(false);
        this.jCheckBoxDay15.setSelected(false);
        this.jCheckBoxDay16.setSelected(false);
        this.jCheckBoxDay17.setSelected(false);
        this.jCheckBoxDay18.setSelected(false);
        this.jCheckBoxDay19.setSelected(false);
        this.jCheckBoxDay20.setSelected(false);
        this.jCheckBoxDay21.setSelected(false);
        this.jCheckBoxDay22.setSelected(false);
        this.jCheckBoxDay23.setSelected(false);
        this.jCheckBoxDay24.setSelected(false);
        this.jCheckBoxDay25.setSelected(false);
        this.jCheckBoxDay26.setSelected(false);
        this.jCheckBoxDay27.setSelected(false);
        this.jCheckBoxDay28.setSelected(false);

        this.jCheckBoxJanuary.setSelected(false);
        this.jCheckBoxFebruary.setSelected(false);
        this.jCheckBoxMarch.setSelected(false);
        this.jCheckBoxApril.setSelected(false);
        this.jCheckBoxMay.setSelected(false);
        this.jCheckBoxJune.setSelected(false);
        this.jCheckBoxJuly.setSelected(false);
        this.jCheckBoxAugust.setSelected(false);
        this.jCheckBoxSeptember.setSelected(false);
        this.jCheckBoxOctober.setSelected(false);
        this.jCheckBoxNovember.setSelected(false);
        this.jCheckBoxDecember.setSelected(false);


    }

    public static void getDBValues(Planer dialog) {
        System.out.println("--");
        try {
            Statement st = Database.conn.createStatement();
            Planer.jobIds.clear();
            Planer.scheduleIds.clear();
            dialog.jComboBoxJobs.removeAllItems();
            dialog.jComboBoxSchedule.removeAllItems();

            dialog.jComboBoxKind.setSelectedIndex(0);
            String jobQuery = "SELECT id, " + Utility.dbQuotes + "name" + Utility.dbQuotes + " FROM JOBS ";  //NOI18N
            ResultSet rsJob = st.executeQuery(jobQuery);
            while (rsJob.next()) {
                jobIds.add(rsJob.getInt(1));
                dialog.jComboBoxJobs.addItem(rsJob.getString(2));

            }
            String scheduleQuery = "SELECT id, " + Utility.dbQuotes + "name" + Utility.dbQuotes + " FROM SCHEDULE ";  //NOI18N
            ResultSet rsSchedule = st.executeQuery(scheduleQuery);
            while (rsSchedule.next()) {
                scheduleIds.add(rsSchedule.getInt(1));
                dialog.jComboBoxSchedule.addItem(rsSchedule.getString(2));

            }
            if (scheduleIds.size() > 0) {
            } else {
                dialog.jButtonChangeSchedule.setEnabled(false);
                dialog.jButtonDeletePlan.setEnabled(false);
                dialog.jButtonAddJob.setEnabled(false);
            }


        } catch (SQLException ex) {
            Logger.getLogger(PrinterWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static List<Integer> jobIds = new ArrayList<>();
    public static List<Integer> scheduleIds = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddJob;
    private javax.swing.JButton jButtonAddPlan;
    private javax.swing.JButton jButtonChangeSchedule;
    private javax.swing.JButton jButtonDeleteJob;
    private javax.swing.JButton jButtonDeletePlan;
    private javax.swing.JCheckBox jCheckBoxApril;
    private javax.swing.JCheckBox jCheckBoxAugust;
    private javax.swing.JCheckBox jCheckBoxDay1;
    private javax.swing.JCheckBox jCheckBoxDay10;
    private javax.swing.JCheckBox jCheckBoxDay11;
    private javax.swing.JCheckBox jCheckBoxDay12;
    private javax.swing.JCheckBox jCheckBoxDay13;
    private javax.swing.JCheckBox jCheckBoxDay14;
    private javax.swing.JCheckBox jCheckBoxDay15;
    private javax.swing.JCheckBox jCheckBoxDay16;
    private javax.swing.JCheckBox jCheckBoxDay17;
    private javax.swing.JCheckBox jCheckBoxDay18;
    private javax.swing.JCheckBox jCheckBoxDay19;
    private javax.swing.JCheckBox jCheckBoxDay2;
    private javax.swing.JCheckBox jCheckBoxDay20;
    private javax.swing.JCheckBox jCheckBoxDay21;
    private javax.swing.JCheckBox jCheckBoxDay22;
    private javax.swing.JCheckBox jCheckBoxDay23;
    private javax.swing.JCheckBox jCheckBoxDay24;
    private javax.swing.JCheckBox jCheckBoxDay25;
    private javax.swing.JCheckBox jCheckBoxDay26;
    private javax.swing.JCheckBox jCheckBoxDay27;
    private javax.swing.JCheckBox jCheckBoxDay28;
    private javax.swing.JCheckBox jCheckBoxDay3;
    private javax.swing.JCheckBox jCheckBoxDay4;
    private javax.swing.JCheckBox jCheckBoxDay5;
    private javax.swing.JCheckBox jCheckBoxDay6;
    private javax.swing.JCheckBox jCheckBoxDay7;
    private javax.swing.JCheckBox jCheckBoxDay8;
    private javax.swing.JCheckBox jCheckBoxDay9;
    private javax.swing.JCheckBox jCheckBoxDecember;
    private javax.swing.JCheckBox jCheckBoxFebruary;
    private javax.swing.JCheckBox jCheckBoxFriday;
    private javax.swing.JCheckBox jCheckBoxJanuary;
    private javax.swing.JCheckBox jCheckBoxJuly;
    private javax.swing.JCheckBox jCheckBoxJune;
    private javax.swing.JCheckBox jCheckBoxMarch;
    private javax.swing.JCheckBox jCheckBoxMay;
    private javax.swing.JCheckBox jCheckBoxMonday;
    private javax.swing.JCheckBox jCheckBoxNovember;
    private javax.swing.JCheckBox jCheckBoxOctober;
    private javax.swing.JCheckBox jCheckBoxSaturday;
    private javax.swing.JCheckBox jCheckBoxSeptember;
    private javax.swing.JCheckBox jCheckBoxSunday;
    private javax.swing.JCheckBox jCheckBoxThursday;
    private javax.swing.JCheckBox jCheckBoxTuesday;
    private javax.swing.JCheckBox jCheckBoxWednesday;
    private javax.swing.JComboBox jComboBoxJobs;
    private javax.swing.JComboBox jComboBoxKind;
    private javax.swing.JComboBox jComboBoxSchedule;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNewPlan;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private javax.swing.JPanel statusBar;
    private javax.swing.JLabel statusBarLabel;
    // End of variables declaration//GEN-END:variables
}
