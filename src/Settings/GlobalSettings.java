/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.PlainDocument;
import jprinteradmin.Database;
import jprinteradmin.Utility;

/**
 *
 * @author stefan
 */
public class GlobalSettings extends javax.swing.JDialog {

    /**
     * Creates new form GlobalSettings
     */
    private Document createNumericDocumentWithMaxLength(final int maxLength) {

        Document doc = new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {
                if (getLength() + str.length() > maxLength) {
                    return;
                }
                if (!str.matches("^[\\d]*$")) //NOI18N
                {
                    return;
                }


                super.insertString(offs, str, a);
            }
        };
        return doc;

    }

    public GlobalSettings(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();
        this.setLocation(100, 100);

        this.htmlTimeout.setDocument(createNumericDocumentWithMaxLength(5));
        this.snmpTimeout.setDocument(createNumericDocumentWithMaxLength(5));
        this.requestWait.setDocument(createNumericDocumentWithMaxLength(5));
        this.getDBValues();
    }

    public GlobalSettings() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        snmpCommunity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        requestWait = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        snmpVersion = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        snmpTimeout = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        htmlTimeout = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        statusBar = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        senderAddress = new javax.swing.JTextField();
        smtpAuthentication = new javax.swing.JCheckBox();
        smtpUsername = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        smtpServer = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        smtpStarttls = new javax.swing.JCheckBox();
        smtpPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language"); // NOI18N
        setTitle(bundle.getString("GENERAL SETTINGS")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setText(bundle.getString("COMMUNITY:")); // NOI18N

        jLabel4.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel4.setText(bundle.getString("REQUEST-SETTINGS")); // NOI18N

        jLabel5.setText(bundle.getString("WAIT FOR ANSWER (MS):")); // NOI18N

        requestWait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestWaitActionPerformed(evt);
            }
        });

        jLabel6.setText(bundle.getString("VERSION:")); // NOI18N

        snmpVersion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "v1", "v2" }));

        jLabel7.setText(bundle.getString("TIMEOUT (MS):")); // NOI18N

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel8.setText(bundle.getString("HTML-SETTINGS")); // NOI18N

        jLabel9.setText(bundle.getString("TIMEOUT (MS):")); // NOI18N

        jLabel10.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel10.setText(bundle.getString("E-MAIL-SETTINGS")); // NOI18N

        jButton1.setText(bundle.getString("CHANGE")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        statusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout statusBarLayout = new javax.swing.GroupLayout(statusBar);
        statusBar.setLayout(statusBarLayout);
        statusBarLayout.setHorizontalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        statusBarLayout.setVerticalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        jLabel1.setText(bundle.getString("SNMP-SETTINGS")); // NOI18N

        smtpAuthentication.setSelected(true);
        smtpAuthentication.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                smtpAuthenticationItemStateChanged(evt);
            }
        });
        smtpAuthentication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smtpAuthenticationActionPerformed(evt);
            }
        });

        smtpUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smtpUsernameActionPerformed(evt);
            }
        });

        jLabel15.setText(bundle.getString("STARTTLS:")); // NOI18N

        jLabel11.setText(bundle.getString("SMTP-SERVER:")); // NOI18N

        jLabel16.setText(bundle.getString("SENDER-ADDRESS:")); // NOI18N

        jLabel13.setText(bundle.getString("USERNAME:")); // NOI18N

        jLabel12.setText(bundle.getString("AUTHENTICATION:")); // NOI18N

        jLabel14.setText(bundle.getString("PASSWORD:")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(smtpUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(smtpServer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(senderAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smtpStarttls)
                            .addComponent(smtpAuthentication))
                        .addGap(0, 232, Short.MAX_VALUE))
                    .addComponent(smtpPassword))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smtpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(smtpAuthentication)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smtpUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(smtpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(smtpStarttls)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(senderAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusBarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(htmlTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(requestWait, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7))
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(snmpVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(snmpCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(snmpTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(requestWait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(snmpCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(snmpVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(snmpTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(htmlTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requestWaitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestWaitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requestWaitActionPerformed

    private void smtpUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smtpUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smtpUsernameActionPerformed

    private void smtpAuthenticationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_smtpAuthenticationItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.smtpPassword.setEnabled(true);
            this.smtpUsername.setEnabled(true);
            this.smtpStarttls.setEnabled(true);
        } else {
            this.smtpPassword.setEnabled(false);
            this.smtpUsername.setEnabled(false);
            this.smtpStarttls.setEnabled(false);
            this.smtpPassword.setText("");
            this.smtpUsername.setText("");
            this.smtpStarttls.setSelected(false);
        }
    }//GEN-LAST:event_smtpAuthenticationItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jprinteradmin.JPrinterAdmin.mw.setEnabled(true);
        if (this.lockSet) {
            Database.delLock("SETTINGS_REQUEST", 0);
        }
        System.out.println("closing");
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Statement st = Database.conn.createStatement();
            Integer snmpVersionInt = 1;
            if (this.snmpVersion.getSelectedItem() == "v2") {
                snmpVersionInt = 2;
            }
            Integer smtpAuth = 0;
            if (this.smtpAuthentication.isSelected()) {
                smtpAuth = 1;
            }
            Integer starttls = 0;
            if (this.smtpStarttls.isSelected()) {
                starttls = 1;
            }
            String stUpdRS = "UPDATE SETTINGS_REQUEST SET printer_timeout = '" + Utility.escapeSqlString(this.requestWait.getText()) + "', snmp_community = '" + Utility.escapeSqlString(this.snmpCommunity.getText()) + "',  snmp_version = " + snmpVersionInt + ", snmp_timeout = " + Utility.escapeSqlString(this.snmpTimeout.getText()) + ", html_timeout = " + Utility.escapeSqlString(this.htmlTimeout.getText()) + " WHERE id = 0;";
            st.executeUpdate(stUpdRS);
            String stUpES = "UPDATE SETTINGS_EMAIL SET smtp_server = '" + Utility.escapeSqlString(this.smtpServer.getText()) + "', smtp_auth = " + smtpAuth + ", smtp_username = '" + Utility.escapeSqlString(this.smtpUsername.getText()) + "', smtp_password = '" + Utility.escapeSqlString(this.smtpPassword.getText()) + "', smtp_starttls = " + starttls + ", fromAddress = '" + Utility.escapeSqlString(this.senderAddress.getText()) + "' WHERE id = 0";
            st.executeUpdate(stUpES);
            this.formWindowClosing(null);
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(GlobalSettings.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void smtpAuthenticationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smtpAuthenticationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smtpAuthenticationActionPerformed
    Boolean lockSet = false;

    private void getDBValues() {
        try {
            Database.lock islock = Database.getLock("SETTINGS_REQUEST", 0); //NOI18N
            if (islock.isLocked == true) {
                this.jButton1.setEnabled(false);
                statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET IS LOCKED. USER:") + islock.user + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString(". DATE: ") + islock.datetime + ".");  //NOI18N                  
            } else {
                Database.setLock("SETTINGS_REQUEST", 0);
                this.lockSet = true;
            }

            Statement st = Database.conn.createStatement();
            String queryEmailSettings = "SELECT smtp_server, smtp_auth, smtp_username, smtp_password, smtp_starttls, fromAddress FROM SETTINGS_EMAIL";
            ResultSet rs = st.executeQuery(queryEmailSettings);
            while (rs.next()) {
                this.smtpServer.setText(rs.getString(1));
                if (rs.getInt(2) == 1) {
                    this.smtpAuthentication.setSelected(true);
                } else {
                    this.smtpAuthentication.setSelected(false);
                }
                this.smtpUsername.setText(rs.getString(3));
                this.smtpPassword.setText(rs.getString(4));
                if (rs.getInt(5) == 1) {
                    this.smtpStarttls.setSelected(true);
                } else {
                    this.smtpStarttls.setSelected(false);
                }
                this.senderAddress.setText(rs.getString(6));
            }

            String queryRequestSettings = "SELECT printer_timeout, snmp_community,  snmp_version, snmp_timeout, html_timeout FROM SETTINGS_REQUEST";
            rs = st.executeQuery(queryRequestSettings);
            while (rs.next()) {
                this.requestWait.setText(rs.getString(1));
                this.snmpCommunity.setText(rs.getString(2));

                this.snmpVersion.setSelectedItem("v" + rs.getString(3));
                this.snmpTimeout.setText(rs.getString(4));
                this.htmlTimeout.setText(rs.getString(5));
            }
        } catch (SQLException ex) {
            Logger.getLogger(GlobalSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) { //NOI18N
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlobalSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlobalSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlobalSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlobalSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GlobalSettings dialog = new GlobalSettings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField htmlTimeout;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField requestWait;
    private javax.swing.JTextField senderAddress;
    private javax.swing.JCheckBox smtpAuthentication;
    private javax.swing.JPasswordField smtpPassword;
    private javax.swing.JTextField smtpServer;
    private javax.swing.JCheckBox smtpStarttls;
    private javax.swing.JTextField smtpUsername;
    private javax.swing.JTextField snmpCommunity;
    private javax.swing.JTextField snmpTimeout;
    private javax.swing.JComboBox snmpVersion;
    private javax.swing.JPanel statusBar;
    private javax.swing.JLabel statusBarLabel;
    // End of variables declaration//GEN-END:variables
}
