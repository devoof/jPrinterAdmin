/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Reports;

import Settings.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import jprinteradmin.database;
import jprinteradmin.utility;
import jprinteradmin.database.lock;
/**
 *
 * @author stefan
 */
public final class ManagePrinterReports extends javax.swing.JDialog {

    public ManagePrinterReports(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getInitialValues();
        this.getDBValues();
        this.setLocation(100, 100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFields = new javax.swing.JTable();
        statusBar = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        jComboBoxReports = new javax.swing.JComboBox();
        jButtonDeleteReport = new javax.swing.JButton();
        jTextFieldNewReport = new javax.swing.JTextField();
        jButtonOutputDeleteCounterFields = new javax.swing.JButton();
        jButtonOutputFieldDelete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCounterValues = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableConditions = new javax.swing.JTable();
        jButtonOutputDeleteCounterFields1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButtonPreview = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonAddOuputField = new javax.swing.JButton();
        jComboBoxOutputFields = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldFieldLabelOF = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxEndSum = new javax.swing.JCheckBox();
        jComboBoxPeriod = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jCheckBoxEndAvg = new javax.swing.JCheckBox();
        jButtonAddOuputCounterField = new javax.swing.JButton();
        jComboBoxCounterValuesFields = new javax.swing.JComboBox();
        jComboBoxOutput = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldFieldLabelCV = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldHeader = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldCondition = new javax.swing.JTextField();
        jComboBoxCondtitionFields = new javax.swing.JComboBox();
        jButtonAddCondition = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxOperator = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxExportTo = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxOutputAs = new javax.swing.JComboBox();
        jTextFieldOutputDestination = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButtonSaveReport = new javax.swing.JButton();
        jButtonOutputFieldMoveUp = new javax.swing.JButton();
        jButtonOutputFieldMoveDown = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jComboBoxOrderBy = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jComboBoxLinking = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jButtonCounterValuesMoveUp = new javax.swing.JButton();
        jButtonCounterValuesMoveDown = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language"); // NOI18N
        setTitle(bundle.getString("MANAGE-PRINTER-REPORTS")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTableFields.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableFields.setDragEnabled(true);
        jTableFields.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        jTableFields.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableFields.getTableHeader().setReorderingAllowed(false);
        jTableFields.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(jTableFields);

        statusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout statusBarLayout = new javax.swing.GroupLayout(statusBar);
        statusBar.setLayout(statusBarLayout);
        statusBarLayout.setHorizontalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusBarLayout.setVerticalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBarLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        jComboBoxReports.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxReportsItemStateChanged(evt);
            }
        });

        jButtonDeleteReport.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDeleteReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteReportActionPerformed(evt);
            }
        });

        jTextFieldNewReport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNewReportKeyReleased(evt);
            }
        });

        jButtonOutputDeleteCounterFields.setText(bundle.getString("DELETE")); // NOI18N
        jButtonOutputDeleteCounterFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputDeleteCounterFieldsActionPerformed(evt);
            }
        });

        jButtonOutputFieldDelete.setText(bundle.getString("DELETE")); // NOI18N
        jButtonOutputFieldDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputFieldDeleteActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane3.setEnabled(false);

        jTableCounterValues.setUpdateSelectionOnSort(false);
        jScrollPane3.setViewportView(jTableCounterValues);

        jLabel5.setText(bundle.getString("OUTPUT-FIELD")); // NOI18N

        jLabel6.setText(bundle.getString("COUNTER-VALUES")); // NOI18N

        jTableConditions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableConditions);

        jButtonOutputDeleteCounterFields1.setText(bundle.getString("DELETE")); // NOI18N
        jButtonOutputDeleteCounterFields1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputDeleteCounterFields1ActionPerformed(evt);
            }
        });

        jLabel10.setText(bundle.getString("CONDITIONS")); // NOI18N

        jButtonPreview.setText(bundle.getString("PREVIEW")); // NOI18N
        jButtonPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviewActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jButtonAddOuputField.setText(bundle.getString("ADD")); // NOI18N
        jButtonAddOuputField.setActionCommand(bundle.getString("ADD")); // NOI18N
        jButtonAddOuputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddOuputFieldActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("OUTPUT-FIELD")); // NOI18N

        jLabel9.setText(bundle.getString("LABEL")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxOutputFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldFieldLabelOF, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddOuputField)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOutputFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddOuputField)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldFieldLabelOF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jCheckBoxEndSum.setText(bundle.getString("ADD-SUM-AT-END")); // NOI18N

        jComboBoxPeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "last month", "last 3 month", "this year", "next month last year", "next three month last year", "last year" }));

        jLabel3.setText(bundle.getString("OUTPUT")); // NOI18N

        jCheckBoxEndAvg.setText(bundle.getString("ADD-AVG-AT-END")); // NOI18N

        jButtonAddOuputCounterField.setText(bundle.getString("ADD")); // NOI18N
        jButtonAddOuputCounterField.setActionCommand(bundle.getString("ADD")); // NOI18N
        jButtonAddOuputCounterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddOuputCounterFieldActionPerformed(evt);
            }
        });

        jLabel4.setText(bundle.getString("COUNTER-VALUES")); // NOI18N

        jLabel2.setText(bundle.getString("PERIOD")); // NOI18N

        jLabel16.setText(bundle.getString("LABEL")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jCheckBoxEndSum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxEndAvg)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFieldLabelCV))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCounterValuesFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddOuputCounterField)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxCounterValuesFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddOuputCounterField)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxEndSum)
                    .addComponent(jCheckBoxEndAvg)
                    .addComponent(jTextFieldFieldLabelCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel8.setText(bundle.getString("HEADER")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jTextFieldCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldConditionActionPerformed(evt);
            }
        });

        jButtonAddCondition.setText(bundle.getString("ADD")); // NOI18N
        jButtonAddCondition.setActionCommand(bundle.getString("ADD")); // NOI18N
        jButtonAddCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddConditionActionPerformed(evt);
            }
        });

        jLabel11.setText(bundle.getString("FIELD")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxCondtitionFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddCondition)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCondtitionFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddCondition))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        jLabel14.setText(bundle.getString("TO2")); // NOI18N

        jLabel12.setText(bundle.getString("OUTPUT")); // NOI18N

        jLabel13.setText(bundle.getString("AS")); // NOI18N

        jComboBoxOutputAs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "csv", "ods", "html" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jComboBoxOutputAs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(33, 33, 33)
                        .addComponent(jComboBoxExportTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldOutputDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)))
                .addGap(86, 86, 86))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOutputAs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldOutputDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxExportTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel7.setText(bundle.getString("REPORT")); // NOI18N

        jButtonSaveReport.setText(bundle.getString("SAVE")); // NOI18N
        jButtonSaveReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveReportActionPerformed(evt);
            }
        });

        jButtonOutputFieldMoveUp.setText(bundle.getString("MOVE-UP")); // NOI18N
        jButtonOutputFieldMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputFieldMoveUpActionPerformed(evt);
            }
        });

        jButtonOutputFieldMoveDown.setText(bundle.getString("MOVE-DOWN")); // NOI18N
        jButtonOutputFieldMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputFieldMoveDownActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        jLabel15.setText(bundle.getString("ORDER-BY")); // NOI18N

        jCheckBox3.setText(bundle.getString("ADD-SUBTOTAL")); // NOI18N

        jLabel17.setText(bundle.getString("LINKING")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOrderBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxLinking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jComboBoxOrderBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBoxLinking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButtonCounterValuesMoveUp.setText(bundle.getString("MOVE-UP")); // NOI18N
        jButtonCounterValuesMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCounterValuesMoveUpActionPerformed(evt);
            }
        });

        jButtonCounterValuesMoveDown.setText(bundle.getString("MOVE-DOWN")); // NOI18N
        jButtonCounterValuesMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCounterValuesMoveDownActionPerformed(evt);
            }
        });

        jButton1.setText(bundle.getString("EXECUTE")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jButtonSaveReport)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPreview)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonCounterValuesMoveDown)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonCounterValuesMoveUp)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonOutputDeleteCounterFields))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButtonOutputFieldMoveDown)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonOutputFieldMoveUp)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonOutputFieldDelete))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxReports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDeleteReport)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNewReport, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(jButtonOutputDeleteCounterFields1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxReports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteReport)
                    .addComponent(jTextFieldNewReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCounterValuesMoveUp)
                        .addComponent(jButtonCounterValuesMoveDown)
                        .addComponent(jButtonOutputDeleteCounterFields))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonOutputFieldDelete)
                        .addComponent(jButtonOutputFieldMoveUp)
                        .addComponent(jButtonOutputFieldMoveDown)))
                .addGap(21, 21, 21)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOutputDeleteCounterFields1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPreview)
                    .addComponent(jButtonSaveReport)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
            try {
                database.delLock("REPORT", ownLock.id); //NOI18N
            } catch (Exception ex) {
            }   
    }//GEN-LAST:event_formWindowClosing

    private void jTable1ValueChanged() {
    }

    private void jTextFieldConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldConditionActionPerformed

    private void jButtonAddOuputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddOuputFieldActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableFields.getModel();
        model.addRow(new Object[]{this.OutputFieldIds.get(this.jComboBoxOutputFields.getSelectedIndex()), this.jComboBoxOutputFields.getSelectedItem(), this.jTextFieldFieldLabelOF.getText()});
    }//GEN-LAST:event_jButtonAddOuputFieldActionPerformed

    private void jButtonOutputFieldDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputFieldDeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableFields.getModel();
        model.removeRow(this.jTableFields.getSelectedRow());

    }//GEN-LAST:event_jButtonOutputFieldDeleteActionPerformed

    private void jButtonOutputFieldMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputFieldMoveUpActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableFields.getModel();
        model.moveRow(this.jTableFields.getSelectedRow(), this.jTableFields.getSelectedRow(), this.jTableFields.getSelectedRow() - 1);
        jTableFields.setRowSelectionInterval(this.jTableFields.getSelectedRow() - 1, this.jTableFields.getSelectedRow() - 1);
    }//GEN-LAST:event_jButtonOutputFieldMoveUpActionPerformed

    private void jButtonOutputFieldMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputFieldMoveDownActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableFields.getModel();
        model.moveRow(this.jTableFields.getSelectedRow(), this.jTableFields.getSelectedRow(), this.jTableFields.getSelectedRow() + 1);
        jTableFields.setRowSelectionInterval(this.jTableFields.getSelectedRow() + 1, this.jTableFields.getSelectedRow() + 1);
    }//GEN-LAST:event_jButtonOutputFieldMoveDownActionPerformed

    private void jTextFieldNewReportKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNewReportKeyReleased
        if (this.jTextFieldNewReport.getText().length() > 0) {
            this.jButtonSaveReport.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("SAVE-AS"));
            this.jButtonSaveReport.setEnabled(true);
            this.statusBarLabel.setText("");
            try {
                database.delLock("REPORT", ownLock.id); //NOI18N
            } catch (Exception ex) {
            }               
        } else {
            
            this.jButtonSaveReport.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("SAVE"));
            if( this.jComboBoxReports.getSelectedItem().equals(" - " + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("NEW") + " - ")) {
                this.jButtonSaveReport.setEnabled(false);
            } else {
                String reportName = this.jComboBoxReports.getSelectedItem().toString();
                PrinterReport pr = new PrinterReport();
                pr.loadReport(reportName);
                showReport(pr);                
                this.jButtonSaveReport.setEnabled(true);
                actLock = null;
                actLock = database.getLock("REPORT", pr.id);
                if (actLock.isLocked){
                    statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET IS LOCKED. USER:") + actLock.user + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString(". DATE: ") + actLock.datetime + ".");
                    this.jButtonSaveReport.setEnabled(false);
                } else {
                    database.setLock("REPORT", pr.id);
                    ownLock = database.getLock("REPORT", pr.id);
                }                
            }            
        }
    }//GEN-LAST:event_jTextFieldNewReportKeyReleased

    private void jButtonAddOuputCounterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddOuputCounterFieldActionPerformed
        int EndAvg = 0;
        int EndSum = 0;
        if (this.jCheckBoxEndAvg.isSelected()) {
            EndAvg = 1;
        }
        if (this.jCheckBoxEndSum.isSelected()) {
            EndSum = 1;
        }
        DefaultTableModel model = (DefaultTableModel) this.jTableCounterValues.getModel();
        model.addRow(new Object[]{this.CounterFieldIds.get(this.jComboBoxCounterValuesFields.getSelectedIndex()), this.jComboBoxCounterValuesFields.getSelectedItem(),
            this.jComboBoxPeriod.getSelectedIndex() + " - " + this.jComboBoxPeriod.getSelectedItem(), this.jComboBoxOutput.getSelectedIndex() + " - " + this.jComboBoxOutput.getSelectedItem(), EndAvg, EndSum, this.jTextFieldFieldLabelCV.getText()});
    }//GEN-LAST:event_jButtonAddOuputCounterFieldActionPerformed

    private void jButtonOutputDeleteCounterFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputDeleteCounterFieldsActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableCounterValues.getModel();
        model.removeRow(this.jTableCounterValues.getSelectedRow());
    }//GEN-LAST:event_jButtonOutputDeleteCounterFieldsActionPerformed

    private void jButtonCounterValuesMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCounterValuesMoveUpActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableCounterValues.getModel();
        model.moveRow(this.jTableCounterValues.getSelectedRow(), this.jTableCounterValues.getSelectedRow(), this.jTableCounterValues.getSelectedRow() - 1);
        jTableCounterValues.setRowSelectionInterval(this.jTableCounterValues.getSelectedRow() - 1, this.jTableCounterValues.getSelectedRow() - 1);

    }//GEN-LAST:event_jButtonCounterValuesMoveUpActionPerformed

    private void jButtonCounterValuesMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCounterValuesMoveDownActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableCounterValues.getModel();
        model.moveRow(this.jTableCounterValues.getSelectedRow(), this.jTableCounterValues.getSelectedRow(), this.jTableCounterValues.getSelectedRow() + 1);
        jTableCounterValues.setRowSelectionInterval(this.jTableCounterValues.getSelectedRow() + 1, this.jTableCounterValues.getSelectedRow() + 1);
    }//GEN-LAST:event_jButtonCounterValuesMoveDownActionPerformed

    private void jButtonSaveReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveReportActionPerformed
        int result = setPrinterReport().saveReport();
        if (result == 1) {
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("REPORT-SECCESFULLY-SAVED"));
        } else if (result == 2) {
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("REPORT-SECCESFULLY-UPDATED"));
        }

    }//GEN-LAST:event_jButtonSaveReportActionPerformed

    private PrinterReport setPrinterReport() {
        PrinterReport pr = new PrinterReport();
        pr.name = this.jTextFieldNewReport.getText();
        pr.heading = this.jTextFieldHeader.getText();
        pr.destination = this.jTextFieldOutputDestination.getText();
        pr.order = OutputFieldIds.get(this.jComboBoxOrderBy.getSelectedIndex());

        pr.conditions = utility.jTable2StringList(this.jTableConditions);
        pr.counterValues = utility.jTable2StringList(this.jTableCounterValues);
        pr.outputFields = utility.jTable2StringList(this.jTableFields);
        pr.linking = this.jComboBoxLinking.getSelectedIndex();
        pr.subTotal = this.jCheckBox3.isSelected();
        pr.outputAs = this.jComboBoxOutputAs.getSelectedIndex();
        pr.exportTo = this.jComboBoxExportTo.getSelectedIndex();
        return pr;
    }
    
    public void showReport(PrinterReport pr){
        this.jTextFieldNewReport.setText(pr.name);
        this.jTextFieldHeader.setText(pr.heading);
        this.jTextFieldOutputDestination.setText(pr.destination);
        this.jComboBoxOrderBy.setSelectedIndex(OutputFieldIds.indexOf(pr.order));
        this.jComboBoxOutputAs.setSelectedIndex(pr.outputAs);
        this.jTableConditions.removeAll();
        this.jComboBoxLinking.setSelectedIndex(pr.linking);  
        this.jComboBoxExportTo.setSelectedIndex(pr.exportTo);
        if (pr.subTotal != null) {
            this.jCheckBox3.setSelected(pr.subTotal);
        } else {
            this.jCheckBox3.setSelected(false);
        }

        DefaultTableModel model = (DefaultTableModel) this.jTableConditions.getModel();
        model.getDataVector().removeAllElements();
        revalidate(); 
        for (int i=0 ; i < pr.conditions.size() ; i++){
            
            String fieldid=pr.conditions.get(i)[1];
            int ii = Integer.parseInt(pr.conditions.get(i)[2]);
            String operator= pr.conditions.get(i)[2] + " - " + this.jComboBoxOperator.getItemAt(ii);
            String value = pr.conditions.get(i)[3];
            int indexOF = OutputFieldIds.indexOf(Integer.parseInt(fieldid));
            String field = this.jComboBoxOutputFields.getItemAt(indexOF).toString();
            model.addRow(new Object[]{fieldid, field, operator , value});
        }
        DefaultTableModel modelCV = (DefaultTableModel) this.jTableCounterValues.getModel();
        modelCV.getDataVector().removeAllElements();
        revalidate();  
        for (int i=0 ; i < pr.counterValues.size() ; i++){
            
            String fieldid=pr.counterValues.get(i)[1];
            int ii = Integer.parseInt(pr.counterValues.get(i)[2]);
            String period= pr.counterValues.get(i)[2] + " - " + this.jComboBoxPeriod.getItemAt(ii);
            String label = pr.counterValues.get(i)[3];
            ii = Integer.parseInt(pr.counterValues.get(i)[4]);
            String output = pr.counterValues.get(i)[4] + " - " + this.jComboBoxOutput.getItemAt(ii);
            String avg = pr.counterValues.get(i)[5];
            String sum = pr.counterValues.get(i)[6];
 
            int indexOF = OutputFieldIds.indexOf(Integer.parseInt(fieldid));
            String field = this.jComboBoxOutputFields.getItemAt(indexOF).toString();
            modelCV.addRow(new Object[]{fieldid, field,  period, output , sum, avg, label});
        }        
  
        DefaultTableModel modelOF = (DefaultTableModel) this.jTableFields.getModel();
        
        System.out.println("rowcount: " + this.jTableFields.getRowCount());

        modelOF.getDataVector().removeAllElements();
        revalidate();        
        for (int i=0 ; i < pr.outputFields.size() ; i++){
            String order=pr.outputFields.get(i)[0];
            String fieldid=pr.outputFields.get(i)[1];
            String label = pr.outputFields.get(i)[2];
            String field = this.jComboBoxOutputFields.getItemAt(Integer.parseInt(fieldid)).toString();
            modelOF.addRow(new Object[]{fieldid, field, label});
        }        

    }

    private void jButtonAddConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddConditionActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableConditions.getModel();
        model.addRow(new Object[]{this.OutputFieldIds.get(this.jComboBoxCondtitionFields.getSelectedIndex()), this.jComboBoxCondtitionFields.getSelectedItem(), this.jComboBoxOperator.getSelectedIndex() + " - " + this.jComboBoxOperator.getSelectedItem(), this.jTextFieldCondition.getText()});
    }//GEN-LAST:event_jButtonAddConditionActionPerformed

    private void jButtonOutputDeleteCounterFields1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputDeleteCounterFields1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.jTableConditions.getModel();
        model.removeRow(this.jTableConditions.getSelectedRow());
    }//GEN-LAST:event_jButtonOutputDeleteCounterFields1ActionPerformed


    lock actLock = null;
    lock ownLock = null;
    
    private void jComboBoxReportsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxReportsItemStateChanged
        if (evt.getStateChange() == 1){
            String reportName = this.jComboBoxReports.getSelectedItem().toString();
            PrinterReport pr = new PrinterReport();
            pr.loadReport(reportName);
            showReport(pr);
            try {
                database.delLock("REPORT", ownLock.id); //NOI18N
            } catch (Exception ex) {
            }            
            this.statusBarLabel.setText("");
            if( this.jComboBoxReports.getSelectedItem().equals(" - " + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("NEW") + " - ")) {
                this.jButtonSaveReport.setEnabled(false);
            } else {
                this.jButtonSaveReport.setEnabled(true);
            }
            actLock = null;
            actLock = database.getLock("REPORT", pr.id);
            if (actLock.isLocked){
                statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("DATASET IS LOCKED. USER:") + actLock.user + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString(". DATE: ") + actLock.datetime + ".");
                this.jButtonSaveReport.setEnabled(false);
            } else {
                database.setLock("REPORT", pr.id);
                ownLock = database.getLock("REPORT", pr.id);
            }
            
        }
    }//GEN-LAST:event_jComboBoxReportsItemStateChanged
    
    public static PrinterReport actualPrinterReport;
    
    private void jButtonPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviewActionPerformed
        actualPrinterReport  = setPrinterReport();
        actualPrinterReport.createReportAsList();
        Preview preview = new Preview(this, true);
        preview.setVisible(true);        
        
    }//GEN-LAST:event_jButtonPreviewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualPrinterReport  = setPrinterReport();
        actualPrinterReport.createReportAsList();
        if(actualPrinterReport.executeReport()) {
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("REPORT EXECUTED"));
        } else {
            this.statusBarLabel.setText(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AN ERROR OCCURRED"));
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonDeleteReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReportActionPerformed
        PrinterReport pr = new PrinterReport();
        pr.deleteReport((String) this.jComboBoxReports.getSelectedItem());
        this.jComboBoxReports.removeAllItems();
        this.getInitialValues();
    }//GEN-LAST:event_jButtonDeleteReportActionPerformed
    public List<Integer> OutputFieldIds = new ArrayList<>();
    public List<String> OutputFieldTypes = new ArrayList<>();
    public List<Integer> CounterFieldIds = new ArrayList<>();

    public void getDBValues() {
    }

    public void getInitialValues() {

        this.jComboBoxOutput.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("SUM"));
        this.jComboBoxOutput.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AVERAGE"));
        //file, email
        this.jComboBoxExportTo.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("FILE"));
        this.jComboBoxExportTo.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("EMAIL"));
        //AND, OR
        this.jComboBoxLinking.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AND"));
        this.jComboBoxLinking.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OR"));
        //equal, greater than, lower than, starts with, ends with
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("EQUAL"));
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("NOT EQUAL"));
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("GREATER THAN"));
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("LOWER THAN"));
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("STARTS WITH"));
        this.jComboBoxOperator.addItem(java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ENDS WITH"));
        try {
            Statement st = database.conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT id, name, type, counter FROM REQUEST_VALUES ORDER BY " + utility.dbQuotes + "order" + utility.dbQuotes); //NOI18N
            ArrayList<String[]> list = new ArrayList<>();

            while (rs.next()) {
                //( (DefaultTableModel) dialog.jTable1.getModel() ).insertRow(icolumn+1, rs.getInt(1));
                this.jComboBoxOutputFields.addItem(rs.getString(2));
                this.jComboBoxCondtitionFields.addItem(rs.getString(2));
                this.OutputFieldIds.add(rs.getInt(1));
                this.OutputFieldTypes.add(rs.getString(3));
                this.jComboBoxOrderBy.addItem(rs.getString(2));
                if (rs.getInt(4) == 1) {
                    this.jComboBoxCounterValuesFields.addItem(rs.getString(2));
                    this.CounterFieldIds.add(rs.getInt(1));
                }


            }


        } catch (SQLException ex) {
            Logger.getLogger(IpareaSettings.class.getName()).log(Level.SEVERE, null, ex);
        }

        Object[][] obj = new Object[0][3];
        this.jTableFields.updateUI();

        this.jTableFields.setModel(new javax.swing.table.DefaultTableModel(
                obj,
                new String[]{
            java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ID"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("FIELD"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("LABEL")
        }) {
            Class[] types = new Class[]{
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, true
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });


        Object[][] obj2 = new Object[0][6];
        this.jTableCounterValues.updateUI();
        this.jTableCounterValues.setModel(new javax.swing.table.DefaultTableModel(
                obj2,
                new String[]{
            java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ID"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("FIELD"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("PERIOD"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OUTPUT"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("SUM"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("AVERAGE"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("LABEL")
        }) {
            Class[] types = new Class[]{
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, true
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        Object[][] obj3 = new Object[0][4];
        this.jTableConditions.updateUI();

        this.jTableConditions.setModel(new javax.swing.table.DefaultTableModel(
                obj3,
                new String[]{
            java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("ID"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("FIELD"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("OPERATOR"), java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("VALUE")
        }) {
            Class[] types = new Class[]{
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, true
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        try {
            String queryReports="SELECT " + utility.dbQuotes + "name" + utility.dbQuotes + " FROM " + utility.dbQuotes + "REPORT" + utility.dbQuotes + "";
            Statement stReports = database.conn.createStatement();
            ResultSet rsReports = stReports.executeQuery(queryReports);
            while (rsReports.next()){
                jComboBoxReports.addItem(rsReports.getString(1));
            }
            jComboBoxReports.addItem(" - " + java.util.ResourceBundle.getBundle("jprinteradmin/language").getString("NEW") + " - ");
        } catch (SQLException ex) {
            Logger.getLogger(ManagePrinterReports.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddCondition;
    private javax.swing.JButton jButtonAddOuputCounterField;
    private javax.swing.JButton jButtonAddOuputField;
    private javax.swing.JButton jButtonCounterValuesMoveDown;
    private javax.swing.JButton jButtonCounterValuesMoveUp;
    private javax.swing.JButton jButtonDeleteReport;
    private javax.swing.JButton jButtonOutputDeleteCounterFields;
    private javax.swing.JButton jButtonOutputDeleteCounterFields1;
    private javax.swing.JButton jButtonOutputFieldDelete;
    private javax.swing.JButton jButtonOutputFieldMoveDown;
    private javax.swing.JButton jButtonOutputFieldMoveUp;
    private javax.swing.JButton jButtonPreview;
    private javax.swing.JButton jButtonSaveReport;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBoxEndAvg;
    private javax.swing.JCheckBox jCheckBoxEndSum;
    private javax.swing.JComboBox jComboBoxCondtitionFields;
    private javax.swing.JComboBox jComboBoxCounterValuesFields;
    private javax.swing.JComboBox jComboBoxExportTo;
    private javax.swing.JComboBox jComboBoxLinking;
    private javax.swing.JComboBox jComboBoxOperator;
    private javax.swing.JComboBox jComboBoxOrderBy;
    private javax.swing.JComboBox jComboBoxOutput;
    private javax.swing.JComboBox jComboBoxOutputAs;
    private javax.swing.JComboBox jComboBoxOutputFields;
    private javax.swing.JComboBox jComboBoxPeriod;
    private javax.swing.JComboBox jComboBoxReports;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableConditions;
    private javax.swing.JTable jTableCounterValues;
    private javax.swing.JTable jTableFields;
    private javax.swing.JTextField jTextFieldCondition;
    private javax.swing.JTextField jTextFieldFieldLabelCV;
    private javax.swing.JTextField jTextFieldFieldLabelOF;
    private javax.swing.JTextField jTextFieldHeader;
    private javax.swing.JTextField jTextFieldNewReport;
    private javax.swing.JTextField jTextFieldOutputDestination;
    private javax.swing.JPanel statusBar;
    private javax.swing.JLabel statusBarLabel;
    // End of variables declaration//GEN-END:variables
}
