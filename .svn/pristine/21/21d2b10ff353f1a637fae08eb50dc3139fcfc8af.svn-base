/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings.requestValueSettings;

import Settings.RequestValuesSettings;
import static Settings.RequestValuesSettings.requestMethods;
import getPrinterData.getPrinterValuesHTML;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import jprinteradmin.database;
import jprinteradmin.mainWindow;
import jprinteradmin.utility;

/**
 *
 * @author stefan
 */
public class Html extends javax.swing.JDialog {

    /**
     * Creates new form Snmp
     */
    public Html(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneId = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jTextFieldIp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldRequestURL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldAuthenticationUrl = new javax.swing.JTextField();
        jTextFieldCookieName = new javax.swing.JTextField();
        jComboBoxGet = new javax.swing.JComboBox();
        jTextFieldTag = new javax.swing.JTextField();
        jSpinnerValueNr = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStringRemoves = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaResult = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablePostData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language_de_DE"); // NOI18N
        setTitle(bundle.getString("HTML-SETTINGS")); // NOI18N
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jLabel1.setText(bundle.getString("HTML-SETTINGS")); // NOI18N

        jLabel2.setText(bundle.getString("ID")); // NOI18N

        jTextPaneId.setEnabled(false);
        jScrollPane2.setViewportView(jTextPaneId);

        jButton1.setText(bundle.getString("OK")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("IP");

        jButton2.setText(bundle.getString("TRY")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText(bundle.getString("RESULT")); // NOI18N

        jButtonDelete.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextFieldRequestURL.setMaximumSize(new java.awt.Dimension(12, 27));

        jLabel6.setText(bundle.getString("REQUEST-URL")); // NOI18N

        jLabel7.setText(bundle.getString("AUTHENTICATION-URL")); // NOI18N

        jLabel8.setText(bundle.getString("COOKIE-NAME")); // NOI18N

        jLabel9.setText(bundle.getString("GET")); // NOI18N

        jLabel10.setText(bundle.getString("VALUE-NUMBER")); // NOI18N

        jLabel11.setText(bundle.getString("TAG")); // NOI18N

        jTextFieldAuthenticationUrl.setMaximumSize(new java.awt.Dimension(12, 27));

        jComboBoxGet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "text", "data" }));

        jTableStringRemoves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Remove"
            }
        ));
        jScrollPane1.setViewportView(jTableStringRemoves);

        jLabel3.setText(bundle.getString("POST-DATA")); // NOI18N

        jLabel12.setText(bundle.getString("STRING-REMOVES")); // NOI18N

        jTextAreaResult.setColumns(20);
        jTextAreaResult.setRows(5);
        jScrollPane5.setViewportView(jTextAreaResult);

        jTablePostData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Variable", "Value"
            }
        ));
        jScrollPane4.setViewportView(jTablePostData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel1))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldCookieName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                .addComponent(jTextFieldAuthenticationUrl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                                .addComponent(jTextFieldRequestURL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTag, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerValueNr, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(131, 131, 131))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldIp, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldRequestURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldAuthenticationUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldCookieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jComboBoxGet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerValueNr, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButtonDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        getAccessibleContext().setAccessibleParent(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.jTableStringRemoves.updateUI();
        this.jTablePostData.updateUI();
        this.jTextAreaResult.setText("");
        List<String> listReplaces = new ArrayList<>();
        for (int i = 0; i < this.jTableStringRemoves.getRowCount(); i++) {
            if (this.jTableStringRemoves.getValueAt(i, 0) != null && this.jTableStringRemoves.getValueAt(i, 0).toString().length() > 0) {
                listReplaces.add(this.jTableStringRemoves.getValueAt(i, 0).toString());
            }
        }
        List<String> listPostData = new ArrayList<>();
        for (int i = 0; i < this.jTablePostData.getRowCount(); i++) {
            if (jTablePostData.getValueAt(i, 0) != null && jTablePostData.getValueAt(i, 1) != null && jTablePostData.getValueAt(i, 0).toString().length() > 0 && jTablePostData.getValueAt(i, 1).toString().length() > 0) {
                listPostData.add(this.jTablePostData.getValueAt(i, 0).toString());
                listPostData.add(this.jTablePostData.getValueAt(i, 1).toString());
            }
        }
        this.jTextAreaResult.setText(getPrinterValuesHTML.getHTMLValue(this.jTextFieldIp.getText(), Integer.parseInt(this.jSpinnerValueNr.getValue().toString()), this.jTextFieldCookieName.getText(), this.jTextFieldRequestURL.getText(), this.jTextFieldAuthenticationUrl.getText(), this.jComboBoxGet.getSelectedItem().toString(), this.jTextFieldTag.getText(), listPostData, listReplaces));

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.jTextPaneId.getText().length() > 0) {
            updateHtmlSettings();
        } else {
            insertHtmlSettings();
        }

        deleteUnusedHtmlSetting();
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void insertHtmlSettings() {
        int id = database.getNextId("REQUEST_METHOD_VALUES_HTML");
        String statement = "INSERT INTO REQUEST_METHOD_VALUES_HTML"
                + "(id,request_url,authentication_url, cookie_name, " + utility.dbQuotes + "get" + utility.dbQuotes + ", " + utility.dbQuotes + "value" + utility.dbQuotes + ", tag)"
                + " VALUES (" + id + ", '" + this.jTextFieldRequestURL.getText() + "', '" + this.jTextFieldAuthenticationUrl.getText() + "','" + this.jTextFieldCookieName.getText() + "','" + this.jComboBoxGet.getSelectedItem() + "', " + this.jSpinnerValueNr.getValue().toString() + ",'" + this.jTextFieldTag.getText() + "')";
        String statement2 = "INSERT INTO REQUEST_METHOD_VALUES (request_method_id, request_values_id, kind, request_method_values_x_id) "
                + " VALUES (" + RequestValuesSettings.requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()) + ", " + mainWindow.rvs.id.getText() + ", 'html', " + id + ")";
        try {
            Statement stat = database.conn.createStatement();
            stat.execute(statement);
            stat.execute(statement2);
            this.jTableStringRemoves.updateUI();
            this.jTablePostData.updateUI();
            this.jTextAreaResult.setText("");
            for (int i = 0; i < this.jTableStringRemoves.getRowCount(); i++) {
                if (this.jTableStringRemoves.getValueAt(i, 0) != null && this.jTableStringRemoves.getValueAt(i, 0).toString().length() > 0) {
                    stat.execute("INSERT INTO REQUEST_METHOD_VALUES_HTML_STRINGREMOVES "
                            + "(rmvh_id, " + utility.dbQuotes + "String" + utility.dbQuotes + ") "
                            + "VALUES(" + id + ", '" + this.jTableStringRemoves.getValueAt(i, 0).toString() + "')");
                }
            }
            for (int i = 0; i < this.jTablePostData.getRowCount(); i++) {
                if (jTablePostData.getValueAt(i, 0) != null && jTablePostData.getValueAt(i, 1) != null && jTablePostData.getValueAt(i, 0).toString().length() > 0 && jTablePostData.getValueAt(i, 1).toString().length() > 0) {
                    stat.execute("INSERT INTO REQUEST_METHOD_VALUES_HTML_POSTDATA "
                            + "(rmvh_id, " + utility.dbQuotes + "Variable" + utility.dbQuotes + ", " + utility.dbQuotes + "value" + utility.dbQuotes + ") "
                            + "VALUES(" + id + ", '" + this.jTablePostData.getValueAt(i, 0).toString() + "', '" + this.jTablePostData.getValueAt(i, 1).toString() + "')");
                    System.out.println("INSERT INTO REQUEST_METHOD_VALUES_HTML_POSTDATA "
                            + "(rmvh_id, " + utility.dbQuotes + "Variable" + utility.dbQuotes + ", " + utility.dbQuotes + "value" + utility.dbQuotes + ") "
                            + "VALUES(" + id + ", '" + this.jTablePostData.getValueAt(i, 0).toString() + "', '" + this.jTablePostData.getValueAt(i, 1).toString() + "')");
                }
            }
            this.jTextPaneId.setText(String.valueOf(id));
            mainWindow.rvs.jTextFieldRkId.setText(String.valueOf(id));
            mainWindow.rvs.jComboBoxRequestKind.setSelectedItem("html");
            mainWindow.rvs.jButtonUpdate.setEnabled(true);
            RequestValuesSettings.requestKind = "html";
            RequestValuesSettings.requestKindId = String.valueOf(id);
            RequestValuesSettings.getDBValues(mainWindow.rvs, requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()));

        } catch (SQLException ex) {
            Logger.getLogger(Html.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void updateHtmlSettings() {
        int id = Integer.parseInt(this.jTextPaneId.getText());
        String statement = "UPDATE REQUEST_METHOD_VALUES_HTML SET"
                + " request_url='" + this.jTextFieldRequestURL.getText() + "' ,authentication_url='" + this.jTextFieldAuthenticationUrl.getText() + "', cookie_name= '" + this.jTextFieldCookieName.getText() + "', " + utility.dbQuotes + "get" + utility.dbQuotes + "='" + this.jComboBoxGet.getSelectedItem() + "', " + utility.dbQuotes + "value" + utility.dbQuotes + "=" + this.jSpinnerValueNr.getValue().toString() + ", tag='" + this.jTextFieldTag.getText() + "'"
                + " WHERE id=" + id;
        System.out.println(statement);
        try {
            Statement stat = database.conn.createStatement();
            stat.execute(statement);

            this.jTableStringRemoves.updateUI();
            this.jTablePostData.updateUI();
            this.jTextAreaResult.setText("");
            stat.execute("DELETE FROM REQUEST_METHOD_VALUES_HTML_STRINGREMOVES WHERE rmvh_id=" + id);
            stat.execute("DELETE FROM REQUEST_METHOD_VALUES_HTML_POSTDATA WHERE rmvh_id=" + id);
            for (int i = 0; i < this.jTableStringRemoves.getRowCount(); i++) {
                if (this.jTableStringRemoves.getValueAt(i, 0) != null && this.jTableStringRemoves.getValueAt(i, 0).toString().length() > 0) {
                    stat.execute("INSERT INTO REQUEST_METHOD_VALUES_HTML_STRINGREMOVES "
                            + "(rmvh_id, " + utility.dbQuotes + "String" + utility.dbQuotes + ") "
                            + "VALUES(" + id + ", '" + this.jTableStringRemoves.getValueAt(i, 0).toString() + "')");
                }
            }
            for (int i = 0; i < this.jTablePostData.getRowCount(); i++) {
                if (jTablePostData.getValueAt(i, 0) != null && jTablePostData.getValueAt(i, 1) != null && jTablePostData.getValueAt(i, 0).toString().length() > 0 && jTablePostData.getValueAt(i, 1).toString().length() > 0) {
                    stat.execute("INSERT INTO REQUEST_METHOD_VALUES_HTML_POSTDATA "
                            + "(rmvh_id, " + utility.dbQuotes + "Variable" + utility.dbQuotes + ", " + utility.dbQuotes + "value" + utility.dbQuotes + ") "
                            + "VALUES(" + id + ", '" + this.jTablePostData.getValueAt(i, 0).toString() + "', '" + this.jTablePostData.getValueAt(i, 1).toString() + "')");
                }
            }
            this.jTextPaneId.setText(String.valueOf(id));
            mainWindow.rvs.jTextFieldRkId.setText(String.valueOf(id));
            mainWindow.rvs.jComboBoxRequestKind.setSelectedItem("html");
            mainWindow.rvs.jButtonUpdate.setEnabled(true);
            RequestValuesSettings.requestKind = "html";
            RequestValuesSettings.requestKindId = String.valueOf(id);
            RequestValuesSettings.getDBValues(mainWindow.rvs, requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()));

        } catch (SQLException ex) {
            Logger.getLogger(Html.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
    }//GEN-LAST:event_formWindowStateChanged

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
    }//GEN-LAST:event_formFocusLost

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        deleteHtmlSettings();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void deleteHtmlSettings() {
        String id = this.jTextPaneId.getText();
        try {

            Statement stat = database.conn.createStatement();
            stat.execute("DELETE FROM REQUEST_METHOD_VALUES WHERE request_method_values_x_id=" + id + " AND kind='html'");
        } catch (SQLException ex) {
            Logger.getLogger(Html.class.getName()).log(Level.SEVERE, null, ex);
        }

        deleteUnusedHtmlSetting();
        mainWindow.rvs.jTextFieldRkId.setText("");
        RequestValuesSettings.requestKind = "";
        RequestValuesSettings.requestKindId = "";
        Settings.RequestValuesSettings.getDBValues(mainWindow.rvs, RequestValuesSettings.requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()));
        this.setVisible(false);
    }

    public static void deleteUnusedHtmlSetting() {
        try {
            Statement stat = database.conn.createStatement();
            ResultSet rs = stat.executeQuery("SELECT REQUEST_METHOD_VALUES_HTML.id from "
                    + "REQUEST_METHOD_VALUES_HTML "
                    + "LEFT JOIN REQUEST_METHOD_VALUES "
                    + "ON REQUEST_METHOD_VALUES.request_method_values_x_id=REQUEST_METHOD_VALUES_HTML.id AND REQUEST_METHOD_VALUES.kind='html'"
                    + "WHERE REQUEST_METHOD_ID IS NULL");
            System.out.println("delete unused");
            while (rs.next()) {
                System.out.println("DELETE " + rs.getString(1));
                String id = rs.getString(1);
                stat.execute("DELETE FROM REQUEST_METHOD_VALUES_HTML WHERE id=" + id);
                stat.execute("DELETE FROM REQUEST_METHOD_VALUES_HTML_POSTDATA WHERE rmvh_id=" + id);
                stat.execute("DELETE FROM REQUEST_METHOD_VALUES_HTML_STRINGREMOVES WHERE rmvh_id=" + id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Html.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Html.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Html.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Html.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Html.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jprinteradmin.mainWindow.rvs.setEnabled(false);

                Html dialog = new Html(new javax.swing.JDialog(), true);

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.out.println("delete unused");


                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JButton jButtonDelete;
    public javax.swing.JComboBox jComboBoxGet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JSpinner jSpinnerValueNr;
    public javax.swing.JTable jTablePostData;
    public javax.swing.JTable jTableStringRemoves;
    private javax.swing.JTextArea jTextAreaResult;
    public javax.swing.JTextField jTextFieldAuthenticationUrl;
    public javax.swing.JTextField jTextFieldCookieName;
    private javax.swing.JTextField jTextFieldIp;
    public javax.swing.JTextField jTextFieldRequestURL;
    public javax.swing.JTextField jTextFieldTag;
    public javax.swing.JTextPane jTextPaneId;
    // End of variables declaration//GEN-END:variables
}
