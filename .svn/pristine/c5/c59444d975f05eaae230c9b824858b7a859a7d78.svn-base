/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings.requestValueSettings;

import Settings.RequestValuesSettings;
import static Settings.RequestValuesSettings.requestMethods;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import jprinteradmin.database;
import jprinteradmin.mainWindow;
import jprinteradmin.utility;

/**
 *
 * @author stefan
 */
public class Snmp extends javax.swing.JDialog {

    /**
     * Creates new form Snmp
     */
    public Snmp(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneId = new javax.swing.JTextPane();
        jCheckBoxHsc = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jTextFieldIp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPaneResult = new javax.swing.JTextPane();
        jButtonDelete = new javax.swing.JButton();
        jTextPaneOid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("jprinteradmin/language_de_DE"); // NOI18N
        setTitle(bundle.getString("SNMP-SETTINGS")); // NOI18N
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jLabel1.setText(bundle.getString("SNMP-SETTINGS")); // NOI18N

        jLabel2.setText(bundle.getString("ID")); // NOI18N

        jLabel3.setText(bundle.getString("OID")); // NOI18N

        jTextPaneId.setEnabled(false);
        jScrollPane2.setViewportView(jTextPaneId);

        jCheckBoxHsc.setText(bundle.getString("HEX-STRING CONVERSION")); // NOI18N

        jButton1.setText(bundle.getString("OK")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText(bundle.getString("IP")); // NOI18N

        jButton2.setText(bundle.getString("TRY")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText(bundle.getString("RESULT")); // NOI18N

        jTextPaneResult.setEnabled(false);
        jTextPaneResult.setName(""); // NOI18N
        jScrollPane4.setViewportView(jTextPaneResult);

        jButtonDelete.setText(bundle.getString("DELETE")); // NOI18N
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxHsc))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelete))
                            .addComponent(jTextPaneOid)))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldIp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxHsc, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPaneOid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButtonDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );

        getAccessibleContext().setAccessibleParent(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        jTextPaneResult.setText("");
        if (this.jCheckBoxHsc.isSelected()) {
            jTextPaneResult.setText(getPrinterData.getPrinterValuesSnmp.hexToString(getPrinterData.getPrinterValuesSnmp.snmpGet(this.jTextFieldIp.getText(), this.jTextPaneOid.getText())));
        } else {
            jTextPaneResult.setText(getPrinterData.getPrinterValuesSnmp.snmpGet(this.jTextFieldIp.getText(), this.jTextPaneOid.getText()));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.jTextPaneId.getText().length() > 0) {
            String hsc = "null";
            if (this.jCheckBoxHsc.isSelected() == true) {
                hsc = "'1'";
            }
            String statement = "UPDATE REQUEST_METHOD_VALUES_SNMP SET " + utility.dbQuotes + "oid" + utility.dbQuotes + " = '" + this.jTextPaneOid.getText() + "', " + utility.dbQuotes + "hexStringConversion" + utility.dbQuotes + " = " + hsc + " WHERE id = " + this.jTextPaneId.getText();
            System.out.println(statement);
            Statement stat;
            try {
                stat = database.conn.createStatement();
                stat.execute(statement);
            } catch (SQLException ex) {
                Logger.getLogger(Snmp.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            String hsc = "null";
            if (this.jCheckBoxHsc.isSelected()) {
                hsc = "1";
            }
            int id = database.getNextId("REQUEST_METHOD_VALUES_SNMP");
            String statementDel = "DELETE FROM REQUEST_METHOD_VALUES WHERE request_method_id = " + RequestValuesSettings.requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()) + " AND request_values_id =" + mainWindow.rvs.id.getText();
            String statement = "INSERT INTO REQUEST_METHOD_VALUES_SNMP (id, oid, hexStringConversion) \n"
                    + "	VALUES (" + id + ", '" + this.jTextPaneOid.getText() + "', " + hsc + ")";
            String statement2 = "INSERT INTO REQUEST_METHOD_VALUES (request_method_id, request_values_id, kind, request_method_values_x_id) "
                    + "	VALUES (" + RequestValuesSettings.requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()) + ", " + mainWindow.rvs.id.getText() + ", 'snmp', " + id + ")";
            try {
                Statement stat = database.conn.createStatement();
                stat.execute(statementDel);
                stat.execute(statement);
                stat.execute(statement2);
                this.jTextPaneId.setText(String.valueOf(id));
                mainWindow.rvs.jTextFieldRkId.setText(String.valueOf(id));
                mainWindow.rvs.jComboBoxRequestKind.setSelectedItem("snmp");
                mainWindow.rvs.jButtonUpdate.setEnabled(true);
                RequestValuesSettings.requestKind = "snmp";
                RequestValuesSettings.requestKindId = String.valueOf(id);
                RequestValuesSettings.getDBValues(mainWindow.rvs, requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()));
            } catch (SQLException ex) {
                Logger.getLogger(Snmp.class.getName()).log(Level.SEVERE, null, ex);
            }


        }

        deleteUnusedSnmpSetting();
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
    }//GEN-LAST:event_formWindowStateChanged

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
    }//GEN-LAST:event_formFocusLost

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            Statement stat = database.conn.createStatement();
            stat.execute("DELETE FROM REQUEST_METHOD_VALUES WHERE request_method_values_x_id=" + this.jTextPaneId.getText() + " AND kind='snmp'");
        } catch (SQLException ex) {
            Logger.getLogger(Snmp.class.getName()).log(Level.SEVERE, null, ex);
        }

        deleteUnusedSnmpSetting();
        mainWindow.rvs.jTextFieldRkId.setText("");
        RequestValuesSettings.requestKind = "";
        RequestValuesSettings.requestKindId = "";
        Settings.RequestValuesSettings.getDBValues(mainWindow.rvs, RequestValuesSettings.requestMethods.get(mainWindow.rvs.jComboBoxRequestMethods.getSelectedIndex()));
        this.setVisible(false);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    public static void deleteUnusedSnmpSetting() {
        try {
            Statement stat = database.conn.createStatement();
            ResultSet rs = stat.executeQuery("SELECT REQUEST_METHOD_VALUES_SNMP.id from "
                    + "REQUEST_METHOD_VALUES_SNMP "
                    + "LEFT JOIN REQUEST_METHOD_VALUES "
                    + "ON REQUEST_METHOD_VALUES.request_method_values_x_id=REQUEST_METHOD_VALUES_SNMP.id  AND REQUEST_METHOD_VALUES.kind='snmp'"
                    + "WHERE REQUEST_METHOD_id IS NULL;");
            System.out.println("delete unused");
            while (rs.next()) {
                System.out.println("DELETE " + rs.getString(1));
                stat.execute("DELETE FROM REQUEST_METHOD_VALUES_SNMP WHERE id=" + rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Snmp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Snmp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Snmp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Snmp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Snmp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jprinteradmin.mainWindow.rvs.setEnabled(false);

                Snmp dialog = new Snmp(new javax.swing.JDialog(), true);

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.out.println("delete unused");


                        System.exit(0);
                    }
                });
                dialog.setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JButton jButtonDelete;
    public javax.swing.JCheckBox jCheckBoxHsc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextFieldIp;
    public javax.swing.JTextPane jTextPaneId;
    public javax.swing.JTextField jTextPaneOid;
    private javax.swing.JTextPane jTextPaneResult;
    // End of variables declaration//GEN-END:variables
}
